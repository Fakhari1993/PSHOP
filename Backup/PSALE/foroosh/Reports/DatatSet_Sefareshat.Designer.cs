//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PSALE.foroosh.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DatatSet_Sefareshat")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DatatSet_Sefareshat : global::System.Data.DataSet {
        
        private MahsoolBaMoshtariDataTable tableMahsoolBaMoshtari;
        
        private MoshtariBaMahsoolDataTable tableMoshtariBaMahsool;
        
        private OstanBaHarMahsoolDataTable tableOstanBaHarMahsool;
        
        private OstanhaBaHArMahsoolDataTable tableOstanhaBaHArMahsool;
        
        private ListNahaiiGheymatMahsoolatDataTable tableListNahaiiGheymatMahsoolat;
        
        private GozareshTedadiDataTable tableGozareshTedadi;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DatatSet_Sefareshat() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DatatSet_Sefareshat(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["MahsoolBaMoshtari"] != null)) {
                    base.Tables.Add(new MahsoolBaMoshtariDataTable(ds.Tables["MahsoolBaMoshtari"]));
                }
                if ((ds.Tables["MoshtariBaMahsool"] != null)) {
                    base.Tables.Add(new MoshtariBaMahsoolDataTable(ds.Tables["MoshtariBaMahsool"]));
                }
                if ((ds.Tables["OstanBaHarMahsool"] != null)) {
                    base.Tables.Add(new OstanBaHarMahsoolDataTable(ds.Tables["OstanBaHarMahsool"]));
                }
                if ((ds.Tables["OstanhaBaHArMahsool"] != null)) {
                    base.Tables.Add(new OstanhaBaHArMahsoolDataTable(ds.Tables["OstanhaBaHArMahsool"]));
                }
                if ((ds.Tables["ListNahaiiGheymatMahsoolat"] != null)) {
                    base.Tables.Add(new ListNahaiiGheymatMahsoolatDataTable(ds.Tables["ListNahaiiGheymatMahsoolat"]));
                }
                if ((ds.Tables["GozareshTedadi"] != null)) {
                    base.Tables.Add(new GozareshTedadiDataTable(ds.Tables["GozareshTedadi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MahsoolBaMoshtariDataTable MahsoolBaMoshtari {
            get {
                return this.tableMahsoolBaMoshtari;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MoshtariBaMahsoolDataTable MoshtariBaMahsool {
            get {
                return this.tableMoshtariBaMahsool;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OstanBaHarMahsoolDataTable OstanBaHarMahsool {
            get {
                return this.tableOstanBaHarMahsool;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OstanhaBaHArMahsoolDataTable OstanhaBaHArMahsool {
            get {
                return this.tableOstanhaBaHArMahsool;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListNahaiiGheymatMahsoolatDataTable ListNahaiiGheymatMahsoolat {
            get {
                return this.tableListNahaiiGheymatMahsoolat;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GozareshTedadiDataTable GozareshTedadi {
            get {
                return this.tableGozareshTedadi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DatatSet_Sefareshat cln = ((DatatSet_Sefareshat)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["MahsoolBaMoshtari"] != null)) {
                    base.Tables.Add(new MahsoolBaMoshtariDataTable(ds.Tables["MahsoolBaMoshtari"]));
                }
                if ((ds.Tables["MoshtariBaMahsool"] != null)) {
                    base.Tables.Add(new MoshtariBaMahsoolDataTable(ds.Tables["MoshtariBaMahsool"]));
                }
                if ((ds.Tables["OstanBaHarMahsool"] != null)) {
                    base.Tables.Add(new OstanBaHarMahsoolDataTable(ds.Tables["OstanBaHarMahsool"]));
                }
                if ((ds.Tables["OstanhaBaHArMahsool"] != null)) {
                    base.Tables.Add(new OstanhaBaHArMahsoolDataTable(ds.Tables["OstanhaBaHArMahsool"]));
                }
                if ((ds.Tables["ListNahaiiGheymatMahsoolat"] != null)) {
                    base.Tables.Add(new ListNahaiiGheymatMahsoolatDataTable(ds.Tables["ListNahaiiGheymatMahsoolat"]));
                }
                if ((ds.Tables["GozareshTedadi"] != null)) {
                    base.Tables.Add(new GozareshTedadiDataTable(ds.Tables["GozareshTedadi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableMahsoolBaMoshtari = ((MahsoolBaMoshtariDataTable)(base.Tables["MahsoolBaMoshtari"]));
            if ((initTable == true)) {
                if ((this.tableMahsoolBaMoshtari != null)) {
                    this.tableMahsoolBaMoshtari.InitVars();
                }
            }
            this.tableMoshtariBaMahsool = ((MoshtariBaMahsoolDataTable)(base.Tables["MoshtariBaMahsool"]));
            if ((initTable == true)) {
                if ((this.tableMoshtariBaMahsool != null)) {
                    this.tableMoshtariBaMahsool.InitVars();
                }
            }
            this.tableOstanBaHarMahsool = ((OstanBaHarMahsoolDataTable)(base.Tables["OstanBaHarMahsool"]));
            if ((initTable == true)) {
                if ((this.tableOstanBaHarMahsool != null)) {
                    this.tableOstanBaHarMahsool.InitVars();
                }
            }
            this.tableOstanhaBaHArMahsool = ((OstanhaBaHArMahsoolDataTable)(base.Tables["OstanhaBaHArMahsool"]));
            if ((initTable == true)) {
                if ((this.tableOstanhaBaHArMahsool != null)) {
                    this.tableOstanhaBaHArMahsool.InitVars();
                }
            }
            this.tableListNahaiiGheymatMahsoolat = ((ListNahaiiGheymatMahsoolatDataTable)(base.Tables["ListNahaiiGheymatMahsoolat"]));
            if ((initTable == true)) {
                if ((this.tableListNahaiiGheymatMahsoolat != null)) {
                    this.tableListNahaiiGheymatMahsoolat.InitVars();
                }
            }
            this.tableGozareshTedadi = ((GozareshTedadiDataTable)(base.Tables["GozareshTedadi"]));
            if ((initTable == true)) {
                if ((this.tableGozareshTedadi != null)) {
                    this.tableGozareshTedadi.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DatatSet_Sefareshat";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DatatSet_Sefareshat.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableMahsoolBaMoshtari = new MahsoolBaMoshtariDataTable();
            base.Tables.Add(this.tableMahsoolBaMoshtari);
            this.tableMoshtariBaMahsool = new MoshtariBaMahsoolDataTable();
            base.Tables.Add(this.tableMoshtariBaMahsool);
            this.tableOstanBaHarMahsool = new OstanBaHarMahsoolDataTable();
            base.Tables.Add(this.tableOstanBaHarMahsool);
            this.tableOstanhaBaHArMahsool = new OstanhaBaHArMahsoolDataTable();
            base.Tables.Add(this.tableOstanhaBaHArMahsool);
            this.tableListNahaiiGheymatMahsoolat = new ListNahaiiGheymatMahsoolatDataTable();
            base.Tables.Add(this.tableListNahaiiGheymatMahsoolat);
            this.tableGozareshTedadi = new GozareshTedadiDataTable();
            base.Tables.Add(this.tableGozareshTedadi);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMahsoolBaMoshtari() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMoshtariBaMahsool() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOstanBaHarMahsool() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOstanhaBaHArMahsool() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeListNahaiiGheymatMahsoolat() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGozareshTedadi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void MahsoolBaMoshtariRowChangeEventHandler(object sender, MahsoolBaMoshtariRowChangeEvent e);
        
        public delegate void MoshtariBaMahsoolRowChangeEventHandler(object sender, MoshtariBaMahsoolRowChangeEvent e);
        
        public delegate void OstanBaHarMahsoolRowChangeEventHandler(object sender, OstanBaHarMahsoolRowChangeEvent e);
        
        public delegate void OstanhaBaHArMahsoolRowChangeEventHandler(object sender, OstanhaBaHArMahsoolRowChangeEvent e);
        
        public delegate void ListNahaiiGheymatMahsoolatRowChangeEventHandler(object sender, ListNahaiiGheymatMahsoolatRowChangeEvent e);
        
        public delegate void GozareshTedadiRowChangeEventHandler(object sender, GozareshTedadiRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MahsoolBaMoshtariDataTable : global::System.Data.TypedTableBase<MahsoolBaMoshtariRow> {
            
            private global::System.Data.DataColumn columnmoshtari;
            
            private global::System.Data.DataColumn columnKala;
            
            private global::System.Data.DataColumn columnkartoon;
            
            private global::System.Data.DataColumn columnbaste;
            
            private global::System.Data.DataColumn columnadad;
            
            private global::System.Data.DataColumn columnkol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariDataTable() {
                this.TableName = "MahsoolBaMoshtari";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MahsoolBaMoshtariDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MahsoolBaMoshtariDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn moshtariColumn {
                get {
                    return this.columnmoshtari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KalaColumn {
                get {
                    return this.columnKala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kartoonColumn {
                get {
                    return this.columnkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basteColumn {
                get {
                    return this.columnbaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adadColumn {
                get {
                    return this.columnadad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariRow this[int index] {
                get {
                    return ((MahsoolBaMoshtariRow)(this.Rows[index]));
                }
            }
            
            public event MahsoolBaMoshtariRowChangeEventHandler MahsoolBaMoshtariRowChanging;
            
            public event MahsoolBaMoshtariRowChangeEventHandler MahsoolBaMoshtariRowChanged;
            
            public event MahsoolBaMoshtariRowChangeEventHandler MahsoolBaMoshtariRowDeleting;
            
            public event MahsoolBaMoshtariRowChangeEventHandler MahsoolBaMoshtariRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMahsoolBaMoshtariRow(MahsoolBaMoshtariRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariRow AddMahsoolBaMoshtariRow(int moshtari, int Kala, double kartoon, double baste, double adad, double kol) {
                MahsoolBaMoshtariRow rowMahsoolBaMoshtariRow = ((MahsoolBaMoshtariRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        moshtari,
                        Kala,
                        kartoon,
                        baste,
                        adad,
                        kol};
                rowMahsoolBaMoshtariRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMahsoolBaMoshtariRow);
                return rowMahsoolBaMoshtariRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MahsoolBaMoshtariDataTable cln = ((MahsoolBaMoshtariDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MahsoolBaMoshtariDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmoshtari = base.Columns["moshtari"];
                this.columnKala = base.Columns["Kala"];
                this.columnkartoon = base.Columns["kartoon"];
                this.columnbaste = base.Columns["baste"];
                this.columnadad = base.Columns["adad"];
                this.columnkol = base.Columns["kol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmoshtari = new global::System.Data.DataColumn("moshtari", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmoshtari);
                this.columnKala = new global::System.Data.DataColumn("Kala", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKala);
                this.columnkartoon = new global::System.Data.DataColumn("kartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkartoon);
                this.columnbaste = new global::System.Data.DataColumn("baste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaste);
                this.columnadad = new global::System.Data.DataColumn("adad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadad);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnKala.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariRow NewMahsoolBaMoshtariRow() {
                return ((MahsoolBaMoshtariRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MahsoolBaMoshtariRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MahsoolBaMoshtariRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MahsoolBaMoshtariRowChanged != null)) {
                    this.MahsoolBaMoshtariRowChanged(this, new MahsoolBaMoshtariRowChangeEvent(((MahsoolBaMoshtariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MahsoolBaMoshtariRowChanging != null)) {
                    this.MahsoolBaMoshtariRowChanging(this, new MahsoolBaMoshtariRowChangeEvent(((MahsoolBaMoshtariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MahsoolBaMoshtariRowDeleted != null)) {
                    this.MahsoolBaMoshtariRowDeleted(this, new MahsoolBaMoshtariRowChangeEvent(((MahsoolBaMoshtariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MahsoolBaMoshtariRowDeleting != null)) {
                    this.MahsoolBaMoshtariRowDeleting(this, new MahsoolBaMoshtariRowChangeEvent(((MahsoolBaMoshtariRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMahsoolBaMoshtariRow(MahsoolBaMoshtariRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MahsoolBaMoshtariDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MoshtariBaMahsoolDataTable : global::System.Data.TypedTableBase<MoshtariBaMahsoolRow> {
            
            private global::System.Data.DataColumn columnmoshtari;
            
            private global::System.Data.DataColumn columnadad;
            
            private global::System.Data.DataColumn columnkartoon;
            
            private global::System.Data.DataColumn columnbaste;
            
            private global::System.Data.DataColumn columnkol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolDataTable() {
                this.TableName = "MoshtariBaMahsool";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MoshtariBaMahsoolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MoshtariBaMahsoolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn moshtariColumn {
                get {
                    return this.columnmoshtari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adadColumn {
                get {
                    return this.columnadad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kartoonColumn {
                get {
                    return this.columnkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basteColumn {
                get {
                    return this.columnbaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolRow this[int index] {
                get {
                    return ((MoshtariBaMahsoolRow)(this.Rows[index]));
                }
            }
            
            public event MoshtariBaMahsoolRowChangeEventHandler MoshtariBaMahsoolRowChanging;
            
            public event MoshtariBaMahsoolRowChangeEventHandler MoshtariBaMahsoolRowChanged;
            
            public event MoshtariBaMahsoolRowChangeEventHandler MoshtariBaMahsoolRowDeleting;
            
            public event MoshtariBaMahsoolRowChangeEventHandler MoshtariBaMahsoolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMoshtariBaMahsoolRow(MoshtariBaMahsoolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolRow AddMoshtariBaMahsoolRow(int moshtari, double adad, double kartoon, double baste, double kol) {
                MoshtariBaMahsoolRow rowMoshtariBaMahsoolRow = ((MoshtariBaMahsoolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        moshtari,
                        adad,
                        kartoon,
                        baste,
                        kol};
                rowMoshtariBaMahsoolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMoshtariBaMahsoolRow);
                return rowMoshtariBaMahsoolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MoshtariBaMahsoolDataTable cln = ((MoshtariBaMahsoolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MoshtariBaMahsoolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnmoshtari = base.Columns["moshtari"];
                this.columnadad = base.Columns["adad"];
                this.columnkartoon = base.Columns["kartoon"];
                this.columnbaste = base.Columns["baste"];
                this.columnkol = base.Columns["kol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnmoshtari = new global::System.Data.DataColumn("moshtari", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmoshtari);
                this.columnadad = new global::System.Data.DataColumn("adad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadad);
                this.columnkartoon = new global::System.Data.DataColumn("kartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkartoon);
                this.columnbaste = new global::System.Data.DataColumn("baste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaste);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnadad.ReadOnly = true;
                this.columnkartoon.ReadOnly = true;
                this.columnbaste.ReadOnly = true;
                this.columnkol.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolRow NewMoshtariBaMahsoolRow() {
                return ((MoshtariBaMahsoolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MoshtariBaMahsoolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MoshtariBaMahsoolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MoshtariBaMahsoolRowChanged != null)) {
                    this.MoshtariBaMahsoolRowChanged(this, new MoshtariBaMahsoolRowChangeEvent(((MoshtariBaMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MoshtariBaMahsoolRowChanging != null)) {
                    this.MoshtariBaMahsoolRowChanging(this, new MoshtariBaMahsoolRowChangeEvent(((MoshtariBaMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MoshtariBaMahsoolRowDeleted != null)) {
                    this.MoshtariBaMahsoolRowDeleted(this, new MoshtariBaMahsoolRowChangeEvent(((MoshtariBaMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MoshtariBaMahsoolRowDeleting != null)) {
                    this.MoshtariBaMahsoolRowDeleting(this, new MoshtariBaMahsoolRowChangeEvent(((MoshtariBaMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMoshtariBaMahsoolRow(MoshtariBaMahsoolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MoshtariBaMahsoolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OstanBaHarMahsoolDataTable : global::System.Data.TypedTableBase<OstanBaHarMahsoolRow> {
            
            private global::System.Data.DataColumn columnKala;
            
            private global::System.Data.DataColumn columnadad;
            
            private global::System.Data.DataColumn columnkartoon;
            
            private global::System.Data.DataColumn columnbaste;
            
            private global::System.Data.DataColumn columnkol;
            
            private global::System.Data.DataColumn columnOstan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolDataTable() {
                this.TableName = "OstanBaHarMahsool";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OstanBaHarMahsoolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OstanBaHarMahsoolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KalaColumn {
                get {
                    return this.columnKala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adadColumn {
                get {
                    return this.columnadad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kartoonColumn {
                get {
                    return this.columnkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basteColumn {
                get {
                    return this.columnbaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OstanColumn {
                get {
                    return this.columnOstan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRow this[int index] {
                get {
                    return ((OstanBaHarMahsoolRow)(this.Rows[index]));
                }
            }
            
            public event OstanBaHarMahsoolRowChangeEventHandler OstanBaHarMahsoolRowChanging;
            
            public event OstanBaHarMahsoolRowChangeEventHandler OstanBaHarMahsoolRowChanged;
            
            public event OstanBaHarMahsoolRowChangeEventHandler OstanBaHarMahsoolRowDeleting;
            
            public event OstanBaHarMahsoolRowChangeEventHandler OstanBaHarMahsoolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOstanBaHarMahsoolRow(OstanBaHarMahsoolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRow AddOstanBaHarMahsoolRow(int Kala, double adad, double kartoon, double baste, double kol) {
                OstanBaHarMahsoolRow rowOstanBaHarMahsoolRow = ((OstanBaHarMahsoolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Kala,
                        adad,
                        kartoon,
                        baste,
                        kol,
                        null};
                rowOstanBaHarMahsoolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOstanBaHarMahsoolRow);
                return rowOstanBaHarMahsoolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRow FindByOstan(short Ostan) {
                return ((OstanBaHarMahsoolRow)(this.Rows.Find(new object[] {
                            Ostan})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OstanBaHarMahsoolDataTable cln = ((OstanBaHarMahsoolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OstanBaHarMahsoolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKala = base.Columns["Kala"];
                this.columnadad = base.Columns["adad"];
                this.columnkartoon = base.Columns["kartoon"];
                this.columnbaste = base.Columns["baste"];
                this.columnkol = base.Columns["kol"];
                this.columnOstan = base.Columns["Ostan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKala = new global::System.Data.DataColumn("Kala", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKala);
                this.columnadad = new global::System.Data.DataColumn("adad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadad);
                this.columnkartoon = new global::System.Data.DataColumn("kartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkartoon);
                this.columnbaste = new global::System.Data.DataColumn("baste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaste);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnOstan = new global::System.Data.DataColumn("Ostan", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOstan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOstan}, true));
                this.columnKala.AllowDBNull = false;
                this.columnadad.ReadOnly = true;
                this.columnkartoon.ReadOnly = true;
                this.columnbaste.ReadOnly = true;
                this.columnkol.ReadOnly = true;
                this.columnOstan.AutoIncrement = true;
                this.columnOstan.AutoIncrementSeed = -1;
                this.columnOstan.AutoIncrementStep = -1;
                this.columnOstan.AllowDBNull = false;
                this.columnOstan.ReadOnly = true;
                this.columnOstan.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRow NewOstanBaHarMahsoolRow() {
                return ((OstanBaHarMahsoolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OstanBaHarMahsoolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OstanBaHarMahsoolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OstanBaHarMahsoolRowChanged != null)) {
                    this.OstanBaHarMahsoolRowChanged(this, new OstanBaHarMahsoolRowChangeEvent(((OstanBaHarMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OstanBaHarMahsoolRowChanging != null)) {
                    this.OstanBaHarMahsoolRowChanging(this, new OstanBaHarMahsoolRowChangeEvent(((OstanBaHarMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OstanBaHarMahsoolRowDeleted != null)) {
                    this.OstanBaHarMahsoolRowDeleted(this, new OstanBaHarMahsoolRowChangeEvent(((OstanBaHarMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OstanBaHarMahsoolRowDeleting != null)) {
                    this.OstanBaHarMahsoolRowDeleting(this, new OstanBaHarMahsoolRowChangeEvent(((OstanBaHarMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOstanBaHarMahsoolRow(OstanBaHarMahsoolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OstanBaHarMahsoolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OstanhaBaHArMahsoolDataTable : global::System.Data.TypedTableBase<OstanhaBaHArMahsoolRow> {
            
            private global::System.Data.DataColumn columnadad;
            
            private global::System.Data.DataColumn columnkartoon;
            
            private global::System.Data.DataColumn columnbaste;
            
            private global::System.Data.DataColumn columnkol;
            
            private global::System.Data.DataColumn columnostan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolDataTable() {
                this.TableName = "OstanhaBaHArMahsool";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OstanhaBaHArMahsoolDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OstanhaBaHArMahsoolDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adadColumn {
                get {
                    return this.columnadad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kartoonColumn {
                get {
                    return this.columnkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basteColumn {
                get {
                    return this.columnbaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ostanColumn {
                get {
                    return this.columnostan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolRow this[int index] {
                get {
                    return ((OstanhaBaHArMahsoolRow)(this.Rows[index]));
                }
            }
            
            public event OstanhaBaHArMahsoolRowChangeEventHandler OstanhaBaHArMahsoolRowChanging;
            
            public event OstanhaBaHArMahsoolRowChangeEventHandler OstanhaBaHArMahsoolRowChanged;
            
            public event OstanhaBaHArMahsoolRowChangeEventHandler OstanhaBaHArMahsoolRowDeleting;
            
            public event OstanhaBaHArMahsoolRowChangeEventHandler OstanhaBaHArMahsoolRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOstanhaBaHArMahsoolRow(OstanhaBaHArMahsoolRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolRow AddOstanhaBaHArMahsoolRow(double adad, double kartoon, double baste, double kol, string ostan) {
                OstanhaBaHArMahsoolRow rowOstanhaBaHArMahsoolRow = ((OstanhaBaHArMahsoolRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        adad,
                        kartoon,
                        baste,
                        kol,
                        ostan};
                rowOstanhaBaHArMahsoolRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOstanhaBaHArMahsoolRow);
                return rowOstanhaBaHArMahsoolRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OstanhaBaHArMahsoolDataTable cln = ((OstanhaBaHArMahsoolDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OstanhaBaHArMahsoolDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnadad = base.Columns["adad"];
                this.columnkartoon = base.Columns["kartoon"];
                this.columnbaste = base.Columns["baste"];
                this.columnkol = base.Columns["kol"];
                this.columnostan = base.Columns["ostan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnadad = new global::System.Data.DataColumn("adad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadad);
                this.columnkartoon = new global::System.Data.DataColumn("kartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkartoon);
                this.columnbaste = new global::System.Data.DataColumn("baste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaste);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnostan = new global::System.Data.DataColumn("ostan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnostan);
                this.columnadad.ReadOnly = true;
                this.columnkartoon.ReadOnly = true;
                this.columnbaste.ReadOnly = true;
                this.columnkol.ReadOnly = true;
                this.columnostan.AllowDBNull = false;
                this.columnostan.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolRow NewOstanhaBaHArMahsoolRow() {
                return ((OstanhaBaHArMahsoolRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OstanhaBaHArMahsoolRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OstanhaBaHArMahsoolRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OstanhaBaHArMahsoolRowChanged != null)) {
                    this.OstanhaBaHArMahsoolRowChanged(this, new OstanhaBaHArMahsoolRowChangeEvent(((OstanhaBaHArMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OstanhaBaHArMahsoolRowChanging != null)) {
                    this.OstanhaBaHArMahsoolRowChanging(this, new OstanhaBaHArMahsoolRowChangeEvent(((OstanhaBaHArMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OstanhaBaHArMahsoolRowDeleted != null)) {
                    this.OstanhaBaHArMahsoolRowDeleted(this, new OstanhaBaHArMahsoolRowChangeEvent(((OstanhaBaHArMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OstanhaBaHArMahsoolRowDeleting != null)) {
                    this.OstanhaBaHArMahsoolRowDeleting(this, new OstanhaBaHArMahsoolRowChangeEvent(((OstanhaBaHArMahsoolRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOstanhaBaHArMahsoolRow(OstanhaBaHArMahsoolRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OstanhaBaHArMahsoolDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListNahaiiGheymatMahsoolatDataTable : global::System.Data.TypedTableBase<ListNahaiiGheymatMahsoolatRow> {
            
            private global::System.Data.DataColumn columnIdKala;
            
            private global::System.Data.DataColumn columnGheymatvahed;
            
            private global::System.Data.DataColumn columnGheymatBaste;
            
            private global::System.Data.DataColumn columnGheymatkartoon;
            
            private global::System.Data.DataColumn columnTakhfif;
            
            private global::System.Data.DataColumn columnEzafe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatDataTable() {
                this.TableName = "ListNahaiiGheymatMahsoolat";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNahaiiGheymatMahsoolatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ListNahaiiGheymatMahsoolatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdKalaColumn {
                get {
                    return this.columnIdKala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GheymatvahedColumn {
                get {
                    return this.columnGheymatvahed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GheymatBasteColumn {
                get {
                    return this.columnGheymatBaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GheymatkartoonColumn {
                get {
                    return this.columnGheymatkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakhfifColumn {
                get {
                    return this.columnTakhfif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EzafeColumn {
                get {
                    return this.columnEzafe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatRow this[int index] {
                get {
                    return ((ListNahaiiGheymatMahsoolatRow)(this.Rows[index]));
                }
            }
            
            public event ListNahaiiGheymatMahsoolatRowChangeEventHandler ListNahaiiGheymatMahsoolatRowChanging;
            
            public event ListNahaiiGheymatMahsoolatRowChangeEventHandler ListNahaiiGheymatMahsoolatRowChanged;
            
            public event ListNahaiiGheymatMahsoolatRowChangeEventHandler ListNahaiiGheymatMahsoolatRowDeleting;
            
            public event ListNahaiiGheymatMahsoolatRowChangeEventHandler ListNahaiiGheymatMahsoolatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddListNahaiiGheymatMahsoolatRow(ListNahaiiGheymatMahsoolatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatRow AddListNahaiiGheymatMahsoolatRow(int IdKala, double Gheymatvahed, double GheymatBaste, double Gheymatkartoon, double Takhfif, double Ezafe) {
                ListNahaiiGheymatMahsoolatRow rowListNahaiiGheymatMahsoolatRow = ((ListNahaiiGheymatMahsoolatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IdKala,
                        Gheymatvahed,
                        GheymatBaste,
                        Gheymatkartoon,
                        Takhfif,
                        Ezafe};
                rowListNahaiiGheymatMahsoolatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListNahaiiGheymatMahsoolatRow);
                return rowListNahaiiGheymatMahsoolatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ListNahaiiGheymatMahsoolatDataTable cln = ((ListNahaiiGheymatMahsoolatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListNahaiiGheymatMahsoolatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnIdKala = base.Columns["IdKala"];
                this.columnGheymatvahed = base.Columns["Gheymatvahed"];
                this.columnGheymatBaste = base.Columns["GheymatBaste"];
                this.columnGheymatkartoon = base.Columns["Gheymatkartoon"];
                this.columnTakhfif = base.Columns["Takhfif"];
                this.columnEzafe = base.Columns["Ezafe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnIdKala = new global::System.Data.DataColumn("IdKala", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdKala);
                this.columnGheymatvahed = new global::System.Data.DataColumn("Gheymatvahed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGheymatvahed);
                this.columnGheymatBaste = new global::System.Data.DataColumn("GheymatBaste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGheymatBaste);
                this.columnGheymatkartoon = new global::System.Data.DataColumn("Gheymatkartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGheymatkartoon);
                this.columnTakhfif = new global::System.Data.DataColumn("Takhfif", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakhfif);
                this.columnEzafe = new global::System.Data.DataColumn("Ezafe", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEzafe);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatRow NewListNahaiiGheymatMahsoolatRow() {
                return ((ListNahaiiGheymatMahsoolatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListNahaiiGheymatMahsoolatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ListNahaiiGheymatMahsoolatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListNahaiiGheymatMahsoolatRowChanged != null)) {
                    this.ListNahaiiGheymatMahsoolatRowChanged(this, new ListNahaiiGheymatMahsoolatRowChangeEvent(((ListNahaiiGheymatMahsoolatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListNahaiiGheymatMahsoolatRowChanging != null)) {
                    this.ListNahaiiGheymatMahsoolatRowChanging(this, new ListNahaiiGheymatMahsoolatRowChangeEvent(((ListNahaiiGheymatMahsoolatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListNahaiiGheymatMahsoolatRowDeleted != null)) {
                    this.ListNahaiiGheymatMahsoolatRowDeleted(this, new ListNahaiiGheymatMahsoolatRowChangeEvent(((ListNahaiiGheymatMahsoolatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListNahaiiGheymatMahsoolatRowDeleting != null)) {
                    this.ListNahaiiGheymatMahsoolatRowDeleting(this, new ListNahaiiGheymatMahsoolatRowChangeEvent(((ListNahaiiGheymatMahsoolatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveListNahaiiGheymatMahsoolatRow(ListNahaiiGheymatMahsoolatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListNahaiiGheymatMahsoolatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GozareshTedadiDataTable : global::System.Data.TypedTableBase<GozareshTedadiRow> {
            
            private global::System.Data.DataColumn columnkala;
            
            private global::System.Data.DataColumn columnkartoon;
            
            private global::System.Data.DataColumn columnbaste;
            
            private global::System.Data.DataColumn columnadad;
            
            private global::System.Data.DataColumn columnkol;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiDataTable() {
                this.TableName = "GozareshTedadi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GozareshTedadiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GozareshTedadiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kalaColumn {
                get {
                    return this.columnkala;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kartoonColumn {
                get {
                    return this.columnkartoon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn basteColumn {
                get {
                    return this.columnbaste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn adadColumn {
                get {
                    return this.columnadad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn kolColumn {
                get {
                    return this.columnkol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiRow this[int index] {
                get {
                    return ((GozareshTedadiRow)(this.Rows[index]));
                }
            }
            
            public event GozareshTedadiRowChangeEventHandler GozareshTedadiRowChanging;
            
            public event GozareshTedadiRowChangeEventHandler GozareshTedadiRowChanged;
            
            public event GozareshTedadiRowChangeEventHandler GozareshTedadiRowDeleting;
            
            public event GozareshTedadiRowChangeEventHandler GozareshTedadiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGozareshTedadiRow(GozareshTedadiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiRow AddGozareshTedadiRow(int kala, double kartoon, double baste, double adad, double kol) {
                GozareshTedadiRow rowGozareshTedadiRow = ((GozareshTedadiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        kala,
                        kartoon,
                        baste,
                        adad,
                        kol};
                rowGozareshTedadiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGozareshTedadiRow);
                return rowGozareshTedadiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GozareshTedadiDataTable cln = ((GozareshTedadiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GozareshTedadiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnkala = base.Columns["kala"];
                this.columnkartoon = base.Columns["kartoon"];
                this.columnbaste = base.Columns["baste"];
                this.columnadad = base.Columns["adad"];
                this.columnkol = base.Columns["kol"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnkala = new global::System.Data.DataColumn("kala", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkala);
                this.columnkartoon = new global::System.Data.DataColumn("kartoon", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkartoon);
                this.columnbaste = new global::System.Data.DataColumn("baste", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbaste);
                this.columnadad = new global::System.Data.DataColumn("adad", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadad);
                this.columnkol = new global::System.Data.DataColumn("kol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnkol);
                this.columnkala.AllowDBNull = false;
                this.columnkartoon.AllowDBNull = false;
                this.columnbaste.AllowDBNull = false;
                this.columnadad.AllowDBNull = false;
                this.columnkol.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiRow NewGozareshTedadiRow() {
                return ((GozareshTedadiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GozareshTedadiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GozareshTedadiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GozareshTedadiRowChanged != null)) {
                    this.GozareshTedadiRowChanged(this, new GozareshTedadiRowChangeEvent(((GozareshTedadiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GozareshTedadiRowChanging != null)) {
                    this.GozareshTedadiRowChanging(this, new GozareshTedadiRowChangeEvent(((GozareshTedadiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GozareshTedadiRowDeleted != null)) {
                    this.GozareshTedadiRowDeleted(this, new GozareshTedadiRowChangeEvent(((GozareshTedadiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GozareshTedadiRowDeleting != null)) {
                    this.GozareshTedadiRowDeleting(this, new GozareshTedadiRowChangeEvent(((GozareshTedadiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGozareshTedadiRow(GozareshTedadiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DatatSet_Sefareshat ds = new DatatSet_Sefareshat();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GozareshTedadiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MahsoolBaMoshtariRow : global::System.Data.DataRow {
            
            private MahsoolBaMoshtariDataTable tableMahsoolBaMoshtari;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MahsoolBaMoshtariRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMahsoolBaMoshtari = ((MahsoolBaMoshtariDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int moshtari {
                get {
                    try {
                        return ((int)(this[this.tableMahsoolBaMoshtari.moshtariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moshtari\' in table \'MahsoolBaMoshtari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMahsoolBaMoshtari.moshtariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Kala {
                get {
                    return ((int)(this[this.tableMahsoolBaMoshtari.KalaColumn]));
                }
                set {
                    this[this.tableMahsoolBaMoshtari.KalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kartoon {
                get {
                    try {
                        return ((double)(this[this.tableMahsoolBaMoshtari.kartoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kartoon\' in table \'MahsoolBaMoshtari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMahsoolBaMoshtari.kartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double baste {
                get {
                    try {
                        return ((double)(this[this.tableMahsoolBaMoshtari.basteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baste\' in table \'MahsoolBaMoshtari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMahsoolBaMoshtari.basteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adad {
                get {
                    try {
                        return ((double)(this[this.tableMahsoolBaMoshtari.adadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'adad\' in table \'MahsoolBaMoshtari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMahsoolBaMoshtari.adadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kol {
                get {
                    try {
                        return ((double)(this[this.tableMahsoolBaMoshtari.kolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kol\' in table \'MahsoolBaMoshtari\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMahsoolBaMoshtari.kolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmoshtariNull() {
                return this.IsNull(this.tableMahsoolBaMoshtari.moshtariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmoshtariNull() {
                this[this.tableMahsoolBaMoshtari.moshtariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskartoonNull() {
                return this.IsNull(this.tableMahsoolBaMoshtari.kartoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkartoonNull() {
                this[this.tableMahsoolBaMoshtari.kartoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasteNull() {
                return this.IsNull(this.tableMahsoolBaMoshtari.basteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasteNull() {
                this[this.tableMahsoolBaMoshtari.basteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadadNull() {
                return this.IsNull(this.tableMahsoolBaMoshtari.adadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadadNull() {
                this[this.tableMahsoolBaMoshtari.adadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskolNull() {
                return this.IsNull(this.tableMahsoolBaMoshtari.kolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkolNull() {
                this[this.tableMahsoolBaMoshtari.kolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MoshtariBaMahsoolRow : global::System.Data.DataRow {
            
            private MoshtariBaMahsoolDataTable tableMoshtariBaMahsool;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MoshtariBaMahsoolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMoshtariBaMahsool = ((MoshtariBaMahsoolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int moshtari {
                get {
                    try {
                        return ((int)(this[this.tableMoshtariBaMahsool.moshtariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'moshtari\' in table \'MoshtariBaMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMoshtariBaMahsool.moshtariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adad {
                get {
                    try {
                        return ((double)(this[this.tableMoshtariBaMahsool.adadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'adad\' in table \'MoshtariBaMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMoshtariBaMahsool.adadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kartoon {
                get {
                    try {
                        return ((double)(this[this.tableMoshtariBaMahsool.kartoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kartoon\' in table \'MoshtariBaMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMoshtariBaMahsool.kartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double baste {
                get {
                    try {
                        return ((double)(this[this.tableMoshtariBaMahsool.basteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baste\' in table \'MoshtariBaMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMoshtariBaMahsool.basteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kol {
                get {
                    try {
                        return ((double)(this[this.tableMoshtariBaMahsool.kolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kol\' in table \'MoshtariBaMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMoshtariBaMahsool.kolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmoshtariNull() {
                return this.IsNull(this.tableMoshtariBaMahsool.moshtariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmoshtariNull() {
                this[this.tableMoshtariBaMahsool.moshtariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadadNull() {
                return this.IsNull(this.tableMoshtariBaMahsool.adadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadadNull() {
                this[this.tableMoshtariBaMahsool.adadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskartoonNull() {
                return this.IsNull(this.tableMoshtariBaMahsool.kartoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkartoonNull() {
                this[this.tableMoshtariBaMahsool.kartoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasteNull() {
                return this.IsNull(this.tableMoshtariBaMahsool.basteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasteNull() {
                this[this.tableMoshtariBaMahsool.basteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskolNull() {
                return this.IsNull(this.tableMoshtariBaMahsool.kolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkolNull() {
                this[this.tableMoshtariBaMahsool.kolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OstanBaHarMahsoolRow : global::System.Data.DataRow {
            
            private OstanBaHarMahsoolDataTable tableOstanBaHarMahsool;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OstanBaHarMahsoolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOstanBaHarMahsool = ((OstanBaHarMahsoolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Kala {
                get {
                    return ((int)(this[this.tableOstanBaHarMahsool.KalaColumn]));
                }
                set {
                    this[this.tableOstanBaHarMahsool.KalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adad {
                get {
                    try {
                        return ((double)(this[this.tableOstanBaHarMahsool.adadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'adad\' in table \'OstanBaHarMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanBaHarMahsool.adadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kartoon {
                get {
                    try {
                        return ((double)(this[this.tableOstanBaHarMahsool.kartoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kartoon\' in table \'OstanBaHarMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanBaHarMahsool.kartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double baste {
                get {
                    try {
                        return ((double)(this[this.tableOstanBaHarMahsool.basteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baste\' in table \'OstanBaHarMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanBaHarMahsool.basteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kol {
                get {
                    try {
                        return ((double)(this[this.tableOstanBaHarMahsool.kolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kol\' in table \'OstanBaHarMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanBaHarMahsool.kolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Ostan {
                get {
                    return ((short)(this[this.tableOstanBaHarMahsool.OstanColumn]));
                }
                set {
                    this[this.tableOstanBaHarMahsool.OstanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadadNull() {
                return this.IsNull(this.tableOstanBaHarMahsool.adadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadadNull() {
                this[this.tableOstanBaHarMahsool.adadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskartoonNull() {
                return this.IsNull(this.tableOstanBaHarMahsool.kartoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkartoonNull() {
                this[this.tableOstanBaHarMahsool.kartoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasteNull() {
                return this.IsNull(this.tableOstanBaHarMahsool.basteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasteNull() {
                this[this.tableOstanBaHarMahsool.basteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskolNull() {
                return this.IsNull(this.tableOstanBaHarMahsool.kolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkolNull() {
                this[this.tableOstanBaHarMahsool.kolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OstanhaBaHArMahsoolRow : global::System.Data.DataRow {
            
            private OstanhaBaHArMahsoolDataTable tableOstanhaBaHArMahsool;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OstanhaBaHArMahsoolRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOstanhaBaHArMahsool = ((OstanhaBaHArMahsoolDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adad {
                get {
                    try {
                        return ((double)(this[this.tableOstanhaBaHArMahsool.adadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'adad\' in table \'OstanhaBaHArMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanhaBaHArMahsool.adadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kartoon {
                get {
                    try {
                        return ((double)(this[this.tableOstanhaBaHArMahsool.kartoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kartoon\' in table \'OstanhaBaHArMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanhaBaHArMahsool.kartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double baste {
                get {
                    try {
                        return ((double)(this[this.tableOstanhaBaHArMahsool.basteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'baste\' in table \'OstanhaBaHArMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanhaBaHArMahsool.basteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kol {
                get {
                    try {
                        return ((double)(this[this.tableOstanhaBaHArMahsool.kolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'kol\' in table \'OstanhaBaHArMahsool\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOstanhaBaHArMahsool.kolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ostan {
                get {
                    return ((string)(this[this.tableOstanhaBaHArMahsool.ostanColumn]));
                }
                set {
                    this[this.tableOstanhaBaHArMahsool.ostanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsadadNull() {
                return this.IsNull(this.tableOstanhaBaHArMahsool.adadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetadadNull() {
                this[this.tableOstanhaBaHArMahsool.adadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskartoonNull() {
                return this.IsNull(this.tableOstanhaBaHArMahsool.kartoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkartoonNull() {
                this[this.tableOstanhaBaHArMahsool.kartoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbasteNull() {
                return this.IsNull(this.tableOstanhaBaHArMahsool.basteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbasteNull() {
                this[this.tableOstanhaBaHArMahsool.basteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IskolNull() {
                return this.IsNull(this.tableOstanhaBaHArMahsool.kolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetkolNull() {
                this[this.tableOstanhaBaHArMahsool.kolColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ListNahaiiGheymatMahsoolatRow : global::System.Data.DataRow {
            
            private ListNahaiiGheymatMahsoolatDataTable tableListNahaiiGheymatMahsoolat;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ListNahaiiGheymatMahsoolatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListNahaiiGheymatMahsoolat = ((ListNahaiiGheymatMahsoolatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IdKala {
                get {
                    try {
                        return ((int)(this[this.tableListNahaiiGheymatMahsoolat.IdKalaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IdKala\' in table \'ListNahaiiGheymatMahsoolat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.IdKalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Gheymatvahed {
                get {
                    try {
                        return ((double)(this[this.tableListNahaiiGheymatMahsoolat.GheymatvahedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gheymatvahed\' in table \'ListNahaiiGheymatMahsoolat\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.GheymatvahedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double GheymatBaste {
                get {
                    try {
                        return ((double)(this[this.tableListNahaiiGheymatMahsoolat.GheymatBasteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GheymatBaste\' in table \'ListNahaiiGheymatMahsoolat\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.GheymatBasteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Gheymatkartoon {
                get {
                    try {
                        return ((double)(this[this.tableListNahaiiGheymatMahsoolat.GheymatkartoonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gheymatkartoon\' in table \'ListNahaiiGheymatMahsoolat\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.GheymatkartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Takhfif {
                get {
                    try {
                        return ((double)(this[this.tableListNahaiiGheymatMahsoolat.TakhfifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Takhfif\' in table \'ListNahaiiGheymatMahsoolat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.TakhfifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Ezafe {
                get {
                    try {
                        return ((double)(this[this.tableListNahaiiGheymatMahsoolat.EzafeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ezafe\' in table \'ListNahaiiGheymatMahsoolat\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableListNahaiiGheymatMahsoolat.EzafeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdKalaNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.IdKalaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdKalaNull() {
                this[this.tableListNahaiiGheymatMahsoolat.IdKalaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGheymatvahedNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.GheymatvahedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGheymatvahedNull() {
                this[this.tableListNahaiiGheymatMahsoolat.GheymatvahedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGheymatBasteNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.GheymatBasteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGheymatBasteNull() {
                this[this.tableListNahaiiGheymatMahsoolat.GheymatBasteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGheymatkartoonNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.GheymatkartoonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGheymatkartoonNull() {
                this[this.tableListNahaiiGheymatMahsoolat.GheymatkartoonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakhfifNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.TakhfifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakhfifNull() {
                this[this.tableListNahaiiGheymatMahsoolat.TakhfifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEzafeNull() {
                return this.IsNull(this.tableListNahaiiGheymatMahsoolat.EzafeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEzafeNull() {
                this[this.tableListNahaiiGheymatMahsoolat.EzafeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GozareshTedadiRow : global::System.Data.DataRow {
            
            private GozareshTedadiDataTable tableGozareshTedadi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GozareshTedadiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGozareshTedadi = ((GozareshTedadiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int kala {
                get {
                    return ((int)(this[this.tableGozareshTedadi.kalaColumn]));
                }
                set {
                    this[this.tableGozareshTedadi.kalaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kartoon {
                get {
                    return ((double)(this[this.tableGozareshTedadi.kartoonColumn]));
                }
                set {
                    this[this.tableGozareshTedadi.kartoonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double baste {
                get {
                    return ((double)(this[this.tableGozareshTedadi.basteColumn]));
                }
                set {
                    this[this.tableGozareshTedadi.basteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double adad {
                get {
                    return ((double)(this[this.tableGozareshTedadi.adadColumn]));
                }
                set {
                    this[this.tableGozareshTedadi.adadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double kol {
                get {
                    return ((double)(this[this.tableGozareshTedadi.kolColumn]));
                }
                set {
                    this[this.tableGozareshTedadi.kolColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MahsoolBaMoshtariRowChangeEvent : global::System.EventArgs {
            
            private MahsoolBaMoshtariRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariRowChangeEvent(MahsoolBaMoshtariRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MahsoolBaMoshtariRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MoshtariBaMahsoolRowChangeEvent : global::System.EventArgs {
            
            private MoshtariBaMahsoolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolRowChangeEvent(MoshtariBaMahsoolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MoshtariBaMahsoolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OstanBaHarMahsoolRowChangeEvent : global::System.EventArgs {
            
            private OstanBaHarMahsoolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRowChangeEvent(OstanBaHarMahsoolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanBaHarMahsoolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OstanhaBaHArMahsoolRowChangeEvent : global::System.EventArgs {
            
            private OstanhaBaHArMahsoolRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolRowChangeEvent(OstanhaBaHArMahsoolRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OstanhaBaHArMahsoolRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ListNahaiiGheymatMahsoolatRowChangeEvent : global::System.EventArgs {
            
            private ListNahaiiGheymatMahsoolatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatRowChangeEvent(ListNahaiiGheymatMahsoolatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ListNahaiiGheymatMahsoolatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GozareshTedadiRowChangeEvent : global::System.EventArgs {
            
            private GozareshTedadiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiRowChangeEvent(GozareshTedadiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GozareshTedadiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PSALE.foroosh.Reports.DatatSet_SefareshatTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MahsoolBaMoshtariTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MahsoolBaMoshtariTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MahsoolBaMoshtari";
            tableMapping.ColumnMappings.Add("moshtari", "moshtari");
            tableMapping.ColumnMappings.Add("Kala", "Kala");
            tableMapping.ColumnMappings.Add("kartoon", "kartoon");
            tableMapping.ColumnMappings.Add("baste", "baste");
            tableMapping.ColumnMappings.Add("adad", "adad");
            tableMapping.ColumnMappings.Add("kol", "kol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Table_005_OrderHeader.column03 AS moshtari, Table_006_OrderDetails.column02 AS Kala, SUM(Table_006_OrderDetails.column05) AS adad, 
                      SUM(Table_006_OrderDetails.column04) AS kartoon, SUM(Table_006_OrderDetails.column03) AS baste, SUM(Table_006_OrderDetails.column06) AS kol
FROM         Table_005_OrderHeader INNER JOIN
                      Table_006_OrderDetails ON Table_005_OrderHeader.columnid = Table_006_OrderDetails.column01
WHERE     (Table_005_OrderHeader.column02 BETWEEN @Date1 AND @Date2) AND (Table_005_OrderHeader.column13 = 0 OR
                      Table_005_OrderHeader.column13 IS NULL)
GROUP BY Table_005_OrderHeader.column03, Table_006_OrderDetails.column02
HAVING      (Table_005_OrderHeader.column03 = @moshtari)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date1", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date2", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@moshtari", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "moshtari", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.MahsoolBaMoshtariDataTable dataTable, string Date1, string Date2, global::System.Nullable<int> moshtari) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            if ((moshtari.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(moshtari.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.MahsoolBaMoshtariDataTable GetData(string Date1, string Date2, global::System.Nullable<int> moshtari) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            if ((moshtari.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(moshtari.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DatatSet_Sefareshat.MahsoolBaMoshtariDataTable dataTable = new DatatSet_Sefareshat.MahsoolBaMoshtariDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MoshtariBaMahsoolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MoshtariBaMahsoolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MoshtariBaMahsool";
            tableMapping.ColumnMappings.Add("moshtari", "moshtari");
            tableMapping.ColumnMappings.Add("adad", "adad");
            tableMapping.ColumnMappings.Add("kartoon", "kartoon");
            tableMapping.ColumnMappings.Add("baste", "baste");
            tableMapping.ColumnMappings.Add("kol", "kol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Table_005_OrderHeader.column03 AS moshtari, SUM(Table_006_OrderDetails.column05) AS adad, SUM(Table_006_OrderDetails.column04) AS kartoon, 
                         SUM(Table_006_OrderDetails.column03) AS baste, SUM(Table_006_OrderDetails.column06) AS kol
FROM            Table_005_OrderHeader INNER JOIN
                         Table_006_OrderDetails ON Table_005_OrderHeader.columnid = Table_006_OrderDetails.column01
WHERE        (Table_006_OrderDetails.column02 = @idkala) AND (Table_005_OrderHeader.column02 BETWEEN @Date1 AND @Date2)AND (Table_005_OrderHeader.column13 = 0 OR
                      Table_005_OrderHeader.column13 IS NULL)
GROUP BY Table_005_OrderHeader.column03";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idkala", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date1", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date2", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.MoshtariBaMahsoolDataTable dataTable, int idkala, string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idkala));
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Date2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.MoshtariBaMahsoolDataTable GetData(int idkala, string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idkala));
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Date2));
            }
            DatatSet_Sefareshat.MoshtariBaMahsoolDataTable dataTable = new DatatSet_Sefareshat.MoshtariBaMahsoolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OstanBaHarMahsoolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OstanBaHarMahsoolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OstanBaHarMahsool";
            tableMapping.ColumnMappings.Add("Kala", "Kala");
            tableMapping.ColumnMappings.Add("adad", "adad");
            tableMapping.ColumnMappings.Add("kartoon", "kartoon");
            tableMapping.ColumnMappings.Add("baste", "baste");
            tableMapping.ColumnMappings.Add("kol", "kol");
            tableMapping.ColumnMappings.Add("Ostan", "Ostan");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Table_006_OrderDetails.column02 AS Kala, SUM(Table_006_OrderDetails.column05) AS adad, SUM(Table_006_OrderDetails.column04) AS kartoon, 
                         SUM(Table_006_OrderDetails.column03) AS baste, SUM(Table_006_OrderDetails.column06) AS kol, 
                         PERP_Base.dbo.Table_060_ProvinceInfo.Column00 AS Ostan
FROM            Table_005_OrderHeader INNER JOIN
                         Table_006_OrderDetails ON Table_005_OrderHeader.columnid = Table_006_OrderDetails.column01 INNER JOIN
                         PERP_Base.dbo.Table_065_CityInfo ON Table_005_OrderHeader.column05 = PERP_Base.dbo.Table_065_CityInfo.Column01 INNER JOIN
                         PERP_Base.dbo.Table_060_ProvinceInfo ON PERP_Base.dbo.Table_065_CityInfo.Column00 = PERP_Base.dbo.Table_060_ProvinceInfo.Column00
WHERE        (Table_005_OrderHeader.column02 BETWEEN @Date1 AND @Date2)AND (Table_005_OrderHeader.column13 = 0 OR
                      Table_005_OrderHeader.column13 IS NULL)
GROUP BY Table_006_OrderDetails.column02, PERP_Base.dbo.Table_060_ProvinceInfo.Column00
HAVING        (PERP_Base.dbo.Table_060_ProvinceInfo.Column00 = @ostan)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date1", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date2", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ostan", global::System.Data.SqlDbType.Int, 2, global::System.Data.ParameterDirection.Input, 0, 0, "Ostan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.OstanBaHarMahsoolDataTable dataTable, string Date1, string Date2, int ostan) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ostan));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.OstanBaHarMahsoolDataTable GetData(string Date1, string Date2, int ostan) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ostan));
            DatatSet_Sefareshat.OstanBaHarMahsoolDataTable dataTable = new DatatSet_Sefareshat.OstanBaHarMahsoolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OstanhaBaHArMahsoolTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OstanhaBaHArMahsoolTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OstanhaBaHArMahsool";
            tableMapping.ColumnMappings.Add("adad", "adad");
            tableMapping.ColumnMappings.Add("kartoon", "kartoon");
            tableMapping.ColumnMappings.Add("baste", "baste");
            tableMapping.ColumnMappings.Add("kol", "kol");
            tableMapping.ColumnMappings.Add("ostan", "ostan");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        SUM(Table_006_OrderDetails.column05) AS adad, SUM(Table_006_OrderDetails.column04) AS kartoon, SUM(Table_006_OrderDetails.column03) AS baste, 
                         SUM(Table_006_OrderDetails.column06) AS kol, PERP_Base.dbo.Table_060_ProvinceInfo.Column01 AS ostan
FROM            Table_005_OrderHeader INNER JOIN
                         Table_006_OrderDetails ON Table_005_OrderHeader.columnid = Table_006_OrderDetails.column01 INNER JOIN
                         PERP_Base.dbo.Table_065_CityInfo ON Table_005_OrderHeader.column05 = PERP_Base.dbo.Table_065_CityInfo.Column01 INNER JOIN
                         PERP_Base.dbo.Table_060_ProvinceInfo ON PERP_Base.dbo.Table_065_CityInfo.Column00 = PERP_Base.dbo.Table_060_ProvinceInfo.Column00
WHERE        (Table_006_OrderDetails.column02 = @idkala) AND (Table_005_OrderHeader.column02 BETWEEN @Date1 AND @Date2)AND (Table_005_OrderHeader.column13 = 0 OR
                      Table_005_OrderHeader.column13 IS NULL)
GROUP BY PERP_Base.dbo.Table_060_ProvinceInfo.Column01";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@idkala", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date1", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date2", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.OstanhaBaHArMahsoolDataTable dataTable, int idkala, string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idkala));
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Date2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.OstanhaBaHArMahsoolDataTable GetData(int idkala, string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(idkala));
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Date2));
            }
            DatatSet_Sefareshat.OstanhaBaHArMahsoolDataTable dataTable = new DatatSet_Sefareshat.OstanhaBaHArMahsoolDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ListNahaiiGheymatMahsoolatTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ListNahaiiGheymatMahsoolatTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ListNahaiiGheymatMahsoolat";
            tableMapping.ColumnMappings.Add("IdKala", "IdKala");
            tableMapping.ColumnMappings.Add("Gheymatvahed", "Gheymatvahed");
            tableMapping.ColumnMappings.Add("GheymatBaste", "GheymatBaste");
            tableMapping.ColumnMappings.Add("Gheymatkartoon", "Gheymatkartoon");
            tableMapping.ColumnMappings.Add("Takhfif", "Takhfif");
            tableMapping.ColumnMappings.Add("Ezafe", "Ezafe");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT      IdKala, Gheymatvahed, GheymatBaste, Gheymatkartoon, Takhfif, Ezafe\r\nF" +
                "ROM          dbo.GetProductCashChangesForAll(@Date) AS GetProductCashChangesForA" +
                "ll_1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.ListNahaiiGheymatMahsoolatDataTable dataTable, string Date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date == null)) {
                throw new global::System.ArgumentNullException("Date");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.ListNahaiiGheymatMahsoolatDataTable GetData(string Date) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date == null)) {
                throw new global::System.ArgumentNullException("Date");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date));
            }
            DatatSet_Sefareshat.ListNahaiiGheymatMahsoolatDataTable dataTable = new DatatSet_Sefareshat.ListNahaiiGheymatMahsoolatDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GozareshTedadiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GozareshTedadiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GozareshTedadi";
            tableMapping.ColumnMappings.Add("kala", "kala");
            tableMapping.ColumnMappings.Add("kartoon", "kartoon");
            tableMapping.ColumnMappings.Add("baste", "baste");
            tableMapping.ColumnMappings.Add("adad", "adad");
            tableMapping.ColumnMappings.Add("kol", "kol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSALE.Properties.Settings.Default.PSALE_ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Table_006_OrderDetails.column02 AS kala, Table_006_OrderDetails.column04 AS kartoon, Table_006_OrderDetails.column03 AS baste, 
                      Table_006_OrderDetails.column05 AS adad, Table_006_OrderDetails.column06 AS kol
FROM         Table_005_OrderHeader INNER JOIN
                      Table_006_OrderDetails ON Table_005_OrderHeader.columnid = Table_006_OrderDetails.column01
WHERE     (Table_005_OrderHeader.column02 BETWEEN @Date1 AND @Date2) AND (Table_005_OrderHeader.column13 = 0 OR
                      Table_005_OrderHeader.column13 IS NULL)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date1", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date2", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "column02", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DatatSet_Sefareshat.GozareshTedadiDataTable dataTable, string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DatatSet_Sefareshat.GozareshTedadiDataTable GetData(string Date1, string Date2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Date1 == null)) {
                throw new global::System.ArgumentNullException("Date1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Date1));
            }
            if ((Date2 == null)) {
                throw new global::System.ArgumentNullException("Date2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(Date2));
            }
            DatatSet_Sefareshat.GozareshTedadiDataTable dataTable = new DatatSet_Sefareshat.GozareshTedadiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(DatatSet_Sefareshat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(DatatSet_Sefareshat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(DatatSet_Sefareshat dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(DatatSet_Sefareshat dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591