//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PSHOP._06_Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private Rpt_SaleTableDataTable tableRpt_SaleTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Rpt_SaleTable"] != null)) {
                    base.Tables.Add(new Rpt_SaleTableDataTable(ds.Tables["Rpt_SaleTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Rpt_SaleTableDataTable Rpt_SaleTable {
            get {
                return this.tableRpt_SaleTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Rpt_SaleTable"] != null)) {
                    base.Tables.Add(new Rpt_SaleTableDataTable(ds.Tables["Rpt_SaleTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableRpt_SaleTable = ((Rpt_SaleTableDataTable)(base.Tables["Rpt_SaleTable"]));
            if ((initTable == true)) {
                if ((this.tableRpt_SaleTable != null)) {
                    this.tableRpt_SaleTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRpt_SaleTable = new Rpt_SaleTableDataTable();
            base.Tables.Add(this.tableRpt_SaleTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeRpt_SaleTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Rpt_SaleTableRowChangeEventHandler(object sender, Rpt_SaleTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Rpt_SaleTableDataTable : global::System.Data.TypedTableBase<Rpt_SaleTableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDetailID;
            
            private global::System.Data.DataColumn columnSerial;
            
            private global::System.Data.DataColumn columnLegalNumber;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnResponsible;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnP2Name;
            
            private global::System.Data.DataColumn columnP2NationalCode;
            
            private global::System.Data.DataColumn columnP2ECode;
            
            private global::System.Data.DataColumn columnDescription2;
            
            private global::System.Data.DataColumn columnP2SabtCode;
            
            private global::System.Data.DataColumn columnP2Address;
            
            private global::System.Data.DataColumn columnP2Tel;
            
            private global::System.Data.DataColumn columnP2Fax;
            
            private global::System.Data.DataColumn columnP2PostalCode;
            
            private global::System.Data.DataColumn columnP2Code;
            
            private global::System.Data.DataColumn columnGoodCode;
            
            private global::System.Data.DataColumn columnGoodName;
            
            private global::System.Data.DataColumn columnBox;
            
            private global::System.Data.DataColumn columnBoxPrice;
            
            private global::System.Data.DataColumn columnPack;
            
            private global::System.Data.DataColumn columnPackPrice;
            
            private global::System.Data.DataColumn columnNumber;
            
            private global::System.Data.DataColumn columnTotalNumber;
            
            private global::System.Data.DataColumn columnSinglePrice;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnDiscountPercent;
            
            private global::System.Data.DataColumn columnDiscountPrice;
            
            private global::System.Data.DataColumn columnTaxPrice;
            
            private global::System.Data.DataColumn columnTotalWeight;
            
            private global::System.Data.DataColumn columnTaxPercent;
            
            private global::System.Data.DataColumn columnNetPrice;
            
            private global::System.Data.DataColumn columnEzafat;
            
            private global::System.Data.DataColumn columnKosoorat;
            
            private global::System.Data.DataColumn columnColumn02;
            
            private global::System.Data.DataColumn columnNetTotal;
            
            private global::System.Data.DataColumn columnCash;
            
            private global::System.Data.DataColumn columnCart;
            
            private global::System.Data.DataColumn columnEtebari;
            
            private global::System.Data.DataColumn columnCheck;
            
            private global::System.Data.DataColumn columnBon;
            
            private global::System.Data.DataColumn columnVolumeGroup;
            
            private global::System.Data.DataColumn columnSpecialGroup;
            
            private global::System.Data.DataColumn columnSpecialCustomer;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCountUnitName;
            
            private global::System.Data.DataColumn columnGroups;
            
            private global::System.Data.DataColumn columncharPrice;
            
            private global::System.Data.DataColumn columnSettleInfo;
            
            private global::System.Data.DataColumn columnFactorType;
            
            private global::System.Data.DataColumn columnNumberInBox;
            
            private global::System.Data.DataColumn columnRowDes;
            
            private global::System.Data.DataColumn columnZarib;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnNumberInPack;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnProvinceName;
            
            private global::System.Data.DataColumn columnPayCash;
            
            private global::System.Data.DataColumn columnDraftNumber;
            
            private global::System.Data.DataColumn columnDocId;
            
            private global::System.Data.DataColumn columnProject;
            
            private global::System.Data.DataColumn columnBuyerName;
            
            private global::System.Data.DataColumn columnSaleType;
            
            private global::System.Data.DataColumn columnDocNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableDataTable() {
                this.TableName = "Rpt_SaleTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Rpt_SaleTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Rpt_SaleTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DetailIDColumn {
                get {
                    return this.columnDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SerialColumn {
                get {
                    return this.columnSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LegalNumberColumn {
                get {
                    return this.columnLegalNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResponsibleColumn {
                get {
                    return this.columnResponsible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2NameColumn {
                get {
                    return this.columnP2Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2NationalCodeColumn {
                get {
                    return this.columnP2NationalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2ECodeColumn {
                get {
                    return this.columnP2ECode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Description2Column {
                get {
                    return this.columnDescription2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2SabtCodeColumn {
                get {
                    return this.columnP2SabtCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2AddressColumn {
                get {
                    return this.columnP2Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2TelColumn {
                get {
                    return this.columnP2Tel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2FaxColumn {
                get {
                    return this.columnP2Fax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2PostalCodeColumn {
                get {
                    return this.columnP2PostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn P2CodeColumn {
                get {
                    return this.columnP2Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodCodeColumn {
                get {
                    return this.columnGoodCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GoodNameColumn {
                get {
                    return this.columnGoodName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxColumn {
                get {
                    return this.columnBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BoxPriceColumn {
                get {
                    return this.columnBoxPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackColumn {
                get {
                    return this.columnPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackPriceColumn {
                get {
                    return this.columnPackPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberColumn {
                get {
                    return this.columnNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalNumberColumn {
                get {
                    return this.columnTotalNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SinglePriceColumn {
                get {
                    return this.columnSinglePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountPercentColumn {
                get {
                    return this.columnDiscountPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiscountPriceColumn {
                get {
                    return this.columnDiscountPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxPriceColumn {
                get {
                    return this.columnTaxPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalWeightColumn {
                get {
                    return this.columnTotalWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxPercentColumn {
                get {
                    return this.columnTaxPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPriceColumn {
                get {
                    return this.columnNetPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EzafatColumn {
                get {
                    return this.columnEzafat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KosooratColumn {
                get {
                    return this.columnKosoorat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Column02Column {
                get {
                    return this.columnColumn02;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetTotalColumn {
                get {
                    return this.columnNetTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CashColumn {
                get {
                    return this.columnCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CartColumn {
                get {
                    return this.columnCart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EtebariColumn {
                get {
                    return this.columnEtebari;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckColumn {
                get {
                    return this.columnCheck;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BonColumn {
                get {
                    return this.columnBon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolumeGroupColumn {
                get {
                    return this.columnVolumeGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialGroupColumn {
                get {
                    return this.columnSpecialGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpecialCustomerColumn {
                get {
                    return this.columnSpecialCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountUnitNameColumn {
                get {
                    return this.columnCountUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GroupsColumn {
                get {
                    return this.columnGroups;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn charPriceColumn {
                get {
                    return this.columncharPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SettleInfoColumn {
                get {
                    return this.columnSettleInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorTypeColumn {
                get {
                    return this.columnFactorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberInBoxColumn {
                get {
                    return this.columnNumberInBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowDesColumn {
                get {
                    return this.columnRowDes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZaribColumn {
                get {
                    return this.columnZarib;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberInPackColumn {
                get {
                    return this.columnNumberInPack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProvinceNameColumn {
                get {
                    return this.columnProvinceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayCashColumn {
                get {
                    return this.columnPayCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DraftNumberColumn {
                get {
                    return this.columnDraftNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocIdColumn {
                get {
                    return this.columnDocId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectColumn {
                get {
                    return this.columnProject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuyerNameColumn {
                get {
                    return this.columnBuyerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaleTypeColumn {
                get {
                    return this.columnSaleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocNumColumn {
                get {
                    return this.columnDocNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableRow this[int index] {
                get {
                    return ((Rpt_SaleTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Rpt_SaleTableRowChangeEventHandler Rpt_SaleTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Rpt_SaleTableRowChangeEventHandler Rpt_SaleTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Rpt_SaleTableRowChangeEventHandler Rpt_SaleTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Rpt_SaleTableRowChangeEventHandler Rpt_SaleTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddRpt_SaleTableRow(Rpt_SaleTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableRow AddRpt_SaleTableRow(
                        int Serial, 
                        int LegalNumber, 
                        string Date, 
                        int Responsible, 
                        int CustomerID, 
                        string P2Name, 
                        string P2NationalCode, 
                        string P2ECode, 
                        string Description2, 
                        string P2SabtCode, 
                        string P2Address, 
                        string P2Tel, 
                        string P2Fax, 
                        string P2PostalCode, 
                        int P2Code, 
                        string GoodCode, 
                        string GoodName, 
                        decimal Box, 
                        decimal BoxPrice, 
                        decimal Pack, 
                        decimal PackPrice, 
                        decimal Number, 
                        decimal TotalNumber, 
                        decimal SinglePrice, 
                        decimal TotalPrice, 
                        decimal DiscountPercent, 
                        decimal DiscountPrice, 
                        decimal TaxPrice, 
                        decimal TotalWeight, 
                        decimal TaxPercent, 
                        decimal NetPrice, 
                        decimal Ezafat, 
                        decimal Kosoorat, 
                        string Column02, 
                        decimal NetTotal, 
                        decimal Cash, 
                        decimal Cart, 
                        decimal Etebari, 
                        decimal Check, 
                        decimal Bon, 
                        decimal VolumeGroup, 
                        decimal SpecialGroup, 
                        decimal SpecialCustomer, 
                        string Description, 
                        string CountUnitName, 
                        string Groups, 
                        string charPrice, 
                        string SettleInfo, 
                        string FactorType, 
                        decimal NumberInBox, 
                        string RowDes, 
                        decimal Zarib, 
                        decimal Expr1, 
                        decimal NumberInPack, 
                        string CityName, 
                        string ProvinceName, 
                        bool PayCash, 
                        int DraftNumber, 
                        int DocId, 
                        string Project, 
                        string BuyerName, 
                        string SaleType, 
                        int DocNum) {
                Rpt_SaleTableRow rowRpt_SaleTableRow = ((Rpt_SaleTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Serial,
                        LegalNumber,
                        Date,
                        Responsible,
                        CustomerID,
                        P2Name,
                        P2NationalCode,
                        P2ECode,
                        Description2,
                        P2SabtCode,
                        P2Address,
                        P2Tel,
                        P2Fax,
                        P2PostalCode,
                        P2Code,
                        GoodCode,
                        GoodName,
                        Box,
                        BoxPrice,
                        Pack,
                        PackPrice,
                        Number,
                        TotalNumber,
                        SinglePrice,
                        TotalPrice,
                        DiscountPercent,
                        DiscountPrice,
                        TaxPrice,
                        TotalWeight,
                        TaxPercent,
                        NetPrice,
                        Ezafat,
                        Kosoorat,
                        Column02,
                        NetTotal,
                        Cash,
                        Cart,
                        Etebari,
                        Check,
                        Bon,
                        VolumeGroup,
                        SpecialGroup,
                        SpecialCustomer,
                        Description,
                        CountUnitName,
                        Groups,
                        charPrice,
                        SettleInfo,
                        FactorType,
                        NumberInBox,
                        RowDes,
                        Zarib,
                        Expr1,
                        NumberInPack,
                        CityName,
                        ProvinceName,
                        PayCash,
                        DraftNumber,
                        DocId,
                        Project,
                        BuyerName,
                        SaleType,
                        DocNum};
                rowRpt_SaleTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRpt_SaleTableRow);
                return rowRpt_SaleTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Rpt_SaleTableDataTable cln = ((Rpt_SaleTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Rpt_SaleTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDetailID = base.Columns["DetailID"];
                this.columnSerial = base.Columns["Serial"];
                this.columnLegalNumber = base.Columns["LegalNumber"];
                this.columnDate = base.Columns["Date"];
                this.columnResponsible = base.Columns["Responsible"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnP2Name = base.Columns["P2Name"];
                this.columnP2NationalCode = base.Columns["P2NationalCode"];
                this.columnP2ECode = base.Columns["P2ECode"];
                this.columnDescription2 = base.Columns["Description2"];
                this.columnP2SabtCode = base.Columns["P2SabtCode"];
                this.columnP2Address = base.Columns["P2Address"];
                this.columnP2Tel = base.Columns["P2Tel"];
                this.columnP2Fax = base.Columns["P2Fax"];
                this.columnP2PostalCode = base.Columns["P2PostalCode"];
                this.columnP2Code = base.Columns["P2Code"];
                this.columnGoodCode = base.Columns["GoodCode"];
                this.columnGoodName = base.Columns["GoodName"];
                this.columnBox = base.Columns["Box"];
                this.columnBoxPrice = base.Columns["BoxPrice"];
                this.columnPack = base.Columns["Pack"];
                this.columnPackPrice = base.Columns["PackPrice"];
                this.columnNumber = base.Columns["Number"];
                this.columnTotalNumber = base.Columns["TotalNumber"];
                this.columnSinglePrice = base.Columns["SinglePrice"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnDiscountPercent = base.Columns["DiscountPercent"];
                this.columnDiscountPrice = base.Columns["DiscountPrice"];
                this.columnTaxPrice = base.Columns["TaxPrice"];
                this.columnTotalWeight = base.Columns["TotalWeight"];
                this.columnTaxPercent = base.Columns["TaxPercent"];
                this.columnNetPrice = base.Columns["NetPrice"];
                this.columnEzafat = base.Columns["Ezafat"];
                this.columnKosoorat = base.Columns["Kosoorat"];
                this.columnColumn02 = base.Columns["Column02"];
                this.columnNetTotal = base.Columns["NetTotal"];
                this.columnCash = base.Columns["Cash"];
                this.columnCart = base.Columns["Cart"];
                this.columnEtebari = base.Columns["Etebari"];
                this.columnCheck = base.Columns["Check"];
                this.columnBon = base.Columns["Bon"];
                this.columnVolumeGroup = base.Columns["VolumeGroup"];
                this.columnSpecialGroup = base.Columns["SpecialGroup"];
                this.columnSpecialCustomer = base.Columns["SpecialCustomer"];
                this.columnDescription = base.Columns["Description"];
                this.columnCountUnitName = base.Columns["CountUnitName"];
                this.columnGroups = base.Columns["Groups"];
                this.columncharPrice = base.Columns["charPrice"];
                this.columnSettleInfo = base.Columns["SettleInfo"];
                this.columnFactorType = base.Columns["FactorType"];
                this.columnNumberInBox = base.Columns["NumberInBox"];
                this.columnRowDes = base.Columns["RowDes"];
                this.columnZarib = base.Columns["Zarib"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnNumberInPack = base.Columns["NumberInPack"];
                this.columnCityName = base.Columns["CityName"];
                this.columnProvinceName = base.Columns["ProvinceName"];
                this.columnPayCash = base.Columns["PayCash"];
                this.columnDraftNumber = base.Columns["DraftNumber"];
                this.columnDocId = base.Columns["DocId"];
                this.columnProject = base.Columns["Project"];
                this.columnBuyerName = base.Columns["BuyerName"];
                this.columnSaleType = base.Columns["SaleType"];
                this.columnDocNum = base.Columns["DocNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDetailID = new global::System.Data.DataColumn("DetailID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailID);
                this.columnSerial = new global::System.Data.DataColumn("Serial", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial);
                this.columnLegalNumber = new global::System.Data.DataColumn("LegalNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLegalNumber);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnResponsible = new global::System.Data.DataColumn("Responsible", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsible);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnP2Name = new global::System.Data.DataColumn("P2Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2Name);
                this.columnP2NationalCode = new global::System.Data.DataColumn("P2NationalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2NationalCode);
                this.columnP2ECode = new global::System.Data.DataColumn("P2ECode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2ECode);
                this.columnDescription2 = new global::System.Data.DataColumn("Description2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription2);
                this.columnP2SabtCode = new global::System.Data.DataColumn("P2SabtCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2SabtCode);
                this.columnP2Address = new global::System.Data.DataColumn("P2Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2Address);
                this.columnP2Tel = new global::System.Data.DataColumn("P2Tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2Tel);
                this.columnP2Fax = new global::System.Data.DataColumn("P2Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2Fax);
                this.columnP2PostalCode = new global::System.Data.DataColumn("P2PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2PostalCode);
                this.columnP2Code = new global::System.Data.DataColumn("P2Code", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP2Code);
                this.columnGoodCode = new global::System.Data.DataColumn("GoodCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodCode);
                this.columnGoodName = new global::System.Data.DataColumn("GoodName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodName);
                this.columnBox = new global::System.Data.DataColumn("Box", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBox);
                this.columnBoxPrice = new global::System.Data.DataColumn("BoxPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxPrice);
                this.columnPack = new global::System.Data.DataColumn("Pack", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPack);
                this.columnPackPrice = new global::System.Data.DataColumn("PackPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackPrice);
                this.columnNumber = new global::System.Data.DataColumn("Number", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumber);
                this.columnTotalNumber = new global::System.Data.DataColumn("TotalNumber", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNumber);
                this.columnSinglePrice = new global::System.Data.DataColumn("SinglePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSinglePrice);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnDiscountPercent = new global::System.Data.DataColumn("DiscountPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPercent);
                this.columnDiscountPrice = new global::System.Data.DataColumn("DiscountPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountPrice);
                this.columnTaxPrice = new global::System.Data.DataColumn("TaxPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPrice);
                this.columnTotalWeight = new global::System.Data.DataColumn("TotalWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWeight);
                this.columnTaxPercent = new global::System.Data.DataColumn("TaxPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxPercent);
                this.columnNetPrice = new global::System.Data.DataColumn("NetPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPrice);
                this.columnEzafat = new global::System.Data.DataColumn("Ezafat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEzafat);
                this.columnKosoorat = new global::System.Data.DataColumn("Kosoorat", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKosoorat);
                this.columnColumn02 = new global::System.Data.DataColumn("Column02", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn02);
                this.columnNetTotal = new global::System.Data.DataColumn("NetTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetTotal);
                this.columnCash = new global::System.Data.DataColumn("Cash", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCash);
                this.columnCart = new global::System.Data.DataColumn("Cart", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCart);
                this.columnEtebari = new global::System.Data.DataColumn("Etebari", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtebari);
                this.columnCheck = new global::System.Data.DataColumn("Check", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheck);
                this.columnBon = new global::System.Data.DataColumn("Bon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBon);
                this.columnVolumeGroup = new global::System.Data.DataColumn("VolumeGroup", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolumeGroup);
                this.columnSpecialGroup = new global::System.Data.DataColumn("SpecialGroup", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialGroup);
                this.columnSpecialCustomer = new global::System.Data.DataColumn("SpecialCustomer", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialCustomer);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCountUnitName = new global::System.Data.DataColumn("CountUnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountUnitName);
                this.columnGroups = new global::System.Data.DataColumn("Groups", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroups);
                this.columncharPrice = new global::System.Data.DataColumn("charPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncharPrice);
                this.columnSettleInfo = new global::System.Data.DataColumn("SettleInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSettleInfo);
                this.columnFactorType = new global::System.Data.DataColumn("FactorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorType);
                this.columnNumberInBox = new global::System.Data.DataColumn("NumberInBox", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberInBox);
                this.columnRowDes = new global::System.Data.DataColumn("RowDes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowDes);
                this.columnZarib = new global::System.Data.DataColumn("Zarib", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZarib);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnNumberInPack = new global::System.Data.DataColumn("NumberInPack", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberInPack);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnProvinceName = new global::System.Data.DataColumn("ProvinceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProvinceName);
                this.columnPayCash = new global::System.Data.DataColumn("PayCash", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayCash);
                this.columnDraftNumber = new global::System.Data.DataColumn("DraftNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDraftNumber);
                this.columnDocId = new global::System.Data.DataColumn("DocId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocId);
                this.columnProject = new global::System.Data.DataColumn("Project", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProject);
                this.columnBuyerName = new global::System.Data.DataColumn("BuyerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuyerName);
                this.columnSaleType = new global::System.Data.DataColumn("SaleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleType);
                this.columnDocNum = new global::System.Data.DataColumn("DocNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocNum);
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnDetailID.AutoIncrement = true;
                this.columnDetailID.AutoIncrementSeed = -1;
                this.columnDetailID.AutoIncrementStep = -1;
                this.columnDetailID.AllowDBNull = false;
                this.columnDetailID.ReadOnly = true;
                this.columnSerial.AllowDBNull = false;
                this.columnDate.AllowDBNull = false;
                this.columnDate.MaxLength = 10;
                this.columnCustomerID.AllowDBNull = false;
                this.columnP2Name.AllowDBNull = false;
                this.columnP2Name.MaxLength = 100;
                this.columnP2NationalCode.AllowDBNull = false;
                this.columnP2NationalCode.MaxLength = 50;
                this.columnP2ECode.MaxLength = 50;
                this.columnDescription2.MaxLength = 500;
                this.columnP2SabtCode.MaxLength = 50;
                this.columnP2Address.MaxLength = 500;
                this.columnP2Tel.MaxLength = 50;
                this.columnP2Fax.MaxLength = 50;
                this.columnP2PostalCode.MaxLength = 10;
                this.columnP2Code.AllowDBNull = false;
                this.columnGoodCode.MaxLength = 16;
                this.columnGoodName.MaxLength = 150;
                this.columnBox.AllowDBNull = false;
                this.columnBoxPrice.AllowDBNull = false;
                this.columnPack.AllowDBNull = false;
                this.columnPackPrice.AllowDBNull = false;
                this.columnNumber.AllowDBNull = false;
                this.columnTotalNumber.AllowDBNull = false;
                this.columnSinglePrice.AllowDBNull = false;
                this.columnTotalPrice.AllowDBNull = false;
                this.columnDiscountPercent.AllowDBNull = false;
                this.columnDiscountPrice.AllowDBNull = false;
                this.columnTaxPrice.AllowDBNull = false;
                this.columnTotalWeight.AllowDBNull = false;
                this.columnTaxPercent.AllowDBNull = false;
                this.columnNetPrice.AllowDBNull = false;
                this.columnEzafat.ReadOnly = true;
                this.columnKosoorat.ReadOnly = true;
                this.columnColumn02.MaxLength = 100;
                this.columnNetTotal.AllowDBNull = false;
                this.columnVolumeGroup.AllowDBNull = false;
                this.columnSpecialGroup.AllowDBNull = false;
                this.columnSpecialCustomer.AllowDBNull = false;
                this.columnDescription.MaxLength = 500;
                this.columnCountUnitName.MaxLength = 50;
                this.columnGroups.MaxLength = 500;
                this.columncharPrice.ReadOnly = true;
                this.columncharPrice.MaxLength = 1;
                this.columnSettleInfo.ReadOnly = true;
                this.columnSettleInfo.MaxLength = 10;
                this.columnFactorType.ReadOnly = true;
                this.columnFactorType.MaxLength = 18;
                this.columnNumberInBox.AllowDBNull = false;
                this.columnRowDes.MaxLength = 500;
                this.columnZarib.AllowDBNull = false;
                this.columnExpr1.AllowDBNull = false;
                this.columnNumberInPack.AllowDBNull = false;
                this.columnCityName.MaxLength = 50;
                this.columnProvinceName.MaxLength = 50;
                this.columnDraftNumber.ReadOnly = true;
                this.columnDocId.AllowDBNull = false;
                this.columnProject.MaxLength = 150;
                this.columnBuyerName.ReadOnly = true;
                this.columnBuyerName.MaxLength = 100;
                this.columnSaleType.ReadOnly = true;
                this.columnSaleType.MaxLength = 100;
                this.columnDocNum.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableRow NewRpt_SaleTableRow() {
                return ((Rpt_SaleTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Rpt_SaleTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Rpt_SaleTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Rpt_SaleTableRowChanged != null)) {
                    this.Rpt_SaleTableRowChanged(this, new Rpt_SaleTableRowChangeEvent(((Rpt_SaleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Rpt_SaleTableRowChanging != null)) {
                    this.Rpt_SaleTableRowChanging(this, new Rpt_SaleTableRowChangeEvent(((Rpt_SaleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Rpt_SaleTableRowDeleted != null)) {
                    this.Rpt_SaleTableRowDeleted(this, new Rpt_SaleTableRowChangeEvent(((Rpt_SaleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Rpt_SaleTableRowDeleting != null)) {
                    this.Rpt_SaleTableRowDeleting(this, new Rpt_SaleTableRowChangeEvent(((Rpt_SaleTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveRpt_SaleTableRow(Rpt_SaleTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Rpt_SaleTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Rpt_SaleTableRow : global::System.Data.DataRow {
            
            private Rpt_SaleTableDataTable tableRpt_SaleTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Rpt_SaleTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRpt_SaleTable = ((Rpt_SaleTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.IDColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DetailID {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.DetailIDColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.DetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Serial {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.SerialColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.SerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LegalNumber {
                get {
                    try {
                        return ((int)(this[this.tableRpt_SaleTable.LegalNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LegalNumber\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.LegalNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Date {
                get {
                    return ((string)(this[this.tableRpt_SaleTable.DateColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Responsible {
                get {
                    try {
                        return ((int)(this[this.tableRpt_SaleTable.ResponsibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Responsible\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.ResponsibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.CustomerIDColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2Name {
                get {
                    return ((string)(this[this.tableRpt_SaleTable.P2NameColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.P2NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2NationalCode {
                get {
                    return ((string)(this[this.tableRpt_SaleTable.P2NationalCodeColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.P2NationalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2ECode {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2ECodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2ECode\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2ECodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description2 {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.Description2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description2\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.Description2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2SabtCode {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2SabtCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2SabtCode\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2SabtCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2Address {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2Address\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2Tel {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2TelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2Tel\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2TelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2Fax {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2Fax\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string P2PostalCode {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.P2PostalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'P2PostalCode\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.P2PostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int P2Code {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.P2CodeColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.P2CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodCode {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.GoodCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodCode\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.GoodCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GoodName {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.GoodNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodName\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.GoodNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Box {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.BoxColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.BoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BoxPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.BoxPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.BoxPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Pack {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.PackColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.PackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PackPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.PackPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.PackPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Number {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.NumberColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalNumber {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.TotalNumberColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.TotalNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SinglePrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.SinglePriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.SinglePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.TotalPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DiscountPercent {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.DiscountPercentColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.DiscountPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DiscountPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.DiscountPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.DiscountPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TaxPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.TaxPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.TaxPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalWeight {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.TotalWeightColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.TotalWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TaxPercent {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.TaxPercentColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.TaxPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetPrice {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.NetPriceColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.NetPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Ezafat {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.EzafatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ezafat\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.EzafatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Kosoorat {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.KosooratColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kosoorat\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.KosooratColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Column02 {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.Column02Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column02\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.Column02Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NetTotal {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.NetTotalColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.NetTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Cash {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.CashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cash\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.CashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Cart {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.CartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cart\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.CartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Etebari {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.EtebariColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Etebari\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.EtebariColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Check {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.CheckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Check\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.CheckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Bon {
                get {
                    try {
                        return ((decimal)(this[this.tableRpt_SaleTable.BonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bon\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.BonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal VolumeGroup {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.VolumeGroupColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.VolumeGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecialGroup {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.SpecialGroupColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.SpecialGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SpecialCustomer {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.SpecialCustomerColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.SpecialCustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountUnitName {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.CountUnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountUnitName\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.CountUnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Groups {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.GroupsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Groups\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.GroupsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string charPrice {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.charPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'charPrice\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.charPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SettleInfo {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.SettleInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SettleInfo\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.SettleInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FactorType {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.FactorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorType\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.FactorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NumberInBox {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.NumberInBoxColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.NumberInBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RowDes {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.RowDesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowDes\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.RowDesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Zarib {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.ZaribColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.ZaribColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Expr1 {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.Expr1Column]));
                }
                set {
                    this[this.tableRpt_SaleTable.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NumberInPack {
                get {
                    return ((decimal)(this[this.tableRpt_SaleTable.NumberInPackColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.NumberInPackColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProvinceName {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.ProvinceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProvinceName\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.ProvinceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PayCash {
                get {
                    try {
                        return ((bool)(this[this.tableRpt_SaleTable.PayCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayCash\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.PayCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DraftNumber {
                get {
                    try {
                        return ((int)(this[this.tableRpt_SaleTable.DraftNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DraftNumber\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.DraftNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DocId {
                get {
                    return ((int)(this[this.tableRpt_SaleTable.DocIdColumn]));
                }
                set {
                    this[this.tableRpt_SaleTable.DocIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Project {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.ProjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Project\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.ProjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BuyerName {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.BuyerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuyerName\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.BuyerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SaleType {
                get {
                    try {
                        return ((string)(this[this.tableRpt_SaleTable.SaleTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleType\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.SaleTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DocNum {
                get {
                    try {
                        return ((int)(this[this.tableRpt_SaleTable.DocNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocNum\' in table \'Rpt_SaleTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableRpt_SaleTable.DocNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLegalNumberNull() {
                return this.IsNull(this.tableRpt_SaleTable.LegalNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLegalNumberNull() {
                this[this.tableRpt_SaleTable.LegalNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResponsibleNull() {
                return this.IsNull(this.tableRpt_SaleTable.ResponsibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResponsibleNull() {
                this[this.tableRpt_SaleTable.ResponsibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2ECodeNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2ECodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2ECodeNull() {
                this[this.tableRpt_SaleTable.P2ECodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescription2Null() {
                return this.IsNull(this.tableRpt_SaleTable.Description2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescription2Null() {
                this[this.tableRpt_SaleTable.Description2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2SabtCodeNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2SabtCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2SabtCodeNull() {
                this[this.tableRpt_SaleTable.P2SabtCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2AddressNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2AddressNull() {
                this[this.tableRpt_SaleTable.P2AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2TelNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2TelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2TelNull() {
                this[this.tableRpt_SaleTable.P2TelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2FaxNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2FaxNull() {
                this[this.tableRpt_SaleTable.P2FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsP2PostalCodeNull() {
                return this.IsNull(this.tableRpt_SaleTable.P2PostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetP2PostalCodeNull() {
                this[this.tableRpt_SaleTable.P2PostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGoodCodeNull() {
                return this.IsNull(this.tableRpt_SaleTable.GoodCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGoodCodeNull() {
                this[this.tableRpt_SaleTable.GoodCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGoodNameNull() {
                return this.IsNull(this.tableRpt_SaleTable.GoodNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGoodNameNull() {
                this[this.tableRpt_SaleTable.GoodNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEzafatNull() {
                return this.IsNull(this.tableRpt_SaleTable.EzafatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEzafatNull() {
                this[this.tableRpt_SaleTable.EzafatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKosooratNull() {
                return this.IsNull(this.tableRpt_SaleTable.KosooratColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKosooratNull() {
                this[this.tableRpt_SaleTable.KosooratColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsColumn02Null() {
                return this.IsNull(this.tableRpt_SaleTable.Column02Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetColumn02Null() {
                this[this.tableRpt_SaleTable.Column02Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCashNull() {
                return this.IsNull(this.tableRpt_SaleTable.CashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCashNull() {
                this[this.tableRpt_SaleTable.CashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCartNull() {
                return this.IsNull(this.tableRpt_SaleTable.CartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCartNull() {
                this[this.tableRpt_SaleTable.CartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEtebariNull() {
                return this.IsNull(this.tableRpt_SaleTable.EtebariColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEtebariNull() {
                this[this.tableRpt_SaleTable.EtebariColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckNull() {
                return this.IsNull(this.tableRpt_SaleTable.CheckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckNull() {
                this[this.tableRpt_SaleTable.CheckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBonNull() {
                return this.IsNull(this.tableRpt_SaleTable.BonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBonNull() {
                this[this.tableRpt_SaleTable.BonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableRpt_SaleTable.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableRpt_SaleTable.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountUnitNameNull() {
                return this.IsNull(this.tableRpt_SaleTable.CountUnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountUnitNameNull() {
                this[this.tableRpt_SaleTable.CountUnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGroupsNull() {
                return this.IsNull(this.tableRpt_SaleTable.GroupsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGroupsNull() {
                this[this.tableRpt_SaleTable.GroupsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscharPriceNull() {
                return this.IsNull(this.tableRpt_SaleTable.charPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcharPriceNull() {
                this[this.tableRpt_SaleTable.charPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSettleInfoNull() {
                return this.IsNull(this.tableRpt_SaleTable.SettleInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSettleInfoNull() {
                this[this.tableRpt_SaleTable.SettleInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorTypeNull() {
                return this.IsNull(this.tableRpt_SaleTable.FactorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorTypeNull() {
                this[this.tableRpt_SaleTable.FactorTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRowDesNull() {
                return this.IsNull(this.tableRpt_SaleTable.RowDesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRowDesNull() {
                this[this.tableRpt_SaleTable.RowDesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableRpt_SaleTable.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNameNull() {
                this[this.tableRpt_SaleTable.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProvinceNameNull() {
                return this.IsNull(this.tableRpt_SaleTable.ProvinceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProvinceNameNull() {
                this[this.tableRpt_SaleTable.ProvinceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayCashNull() {
                return this.IsNull(this.tableRpt_SaleTable.PayCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayCashNull() {
                this[this.tableRpt_SaleTable.PayCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDraftNumberNull() {
                return this.IsNull(this.tableRpt_SaleTable.DraftNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDraftNumberNull() {
                this[this.tableRpt_SaleTable.DraftNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectNull() {
                return this.IsNull(this.tableRpt_SaleTable.ProjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectNull() {
                this[this.tableRpt_SaleTable.ProjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBuyerNameNull() {
                return this.IsNull(this.tableRpt_SaleTable.BuyerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBuyerNameNull() {
                this[this.tableRpt_SaleTable.BuyerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSaleTypeNull() {
                return this.IsNull(this.tableRpt_SaleTable.SaleTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSaleTypeNull() {
                this[this.tableRpt_SaleTable.SaleTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDocNumNull() {
                return this.IsNull(this.tableRpt_SaleTable.DocNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDocNumNull() {
                this[this.tableRpt_SaleTable.DocNumColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Rpt_SaleTableRowChangeEvent : global::System.EventArgs {
            
            private Rpt_SaleTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableRowChangeEvent(Rpt_SaleTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Rpt_SaleTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace PSHOP._06_Reports.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Rpt_SaleTableTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Rpt_SaleTableTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Rpt_SaleTable";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DetailID", "DetailID");
            tableMapping.ColumnMappings.Add("Serial", "Serial");
            tableMapping.ColumnMappings.Add("LegalNumber", "LegalNumber");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("Responsible", "Responsible");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("P2Name", "P2Name");
            tableMapping.ColumnMappings.Add("P2NationalCode", "P2NationalCode");
            tableMapping.ColumnMappings.Add("P2ECode", "P2ECode");
            tableMapping.ColumnMappings.Add("Description2", "Description2");
            tableMapping.ColumnMappings.Add("P2SabtCode", "P2SabtCode");
            tableMapping.ColumnMappings.Add("P2Address", "P2Address");
            tableMapping.ColumnMappings.Add("P2Tel", "P2Tel");
            tableMapping.ColumnMappings.Add("P2Fax", "P2Fax");
            tableMapping.ColumnMappings.Add("P2PostalCode", "P2PostalCode");
            tableMapping.ColumnMappings.Add("P2Code", "P2Code");
            tableMapping.ColumnMappings.Add("GoodCode", "GoodCode");
            tableMapping.ColumnMappings.Add("GoodName", "GoodName");
            tableMapping.ColumnMappings.Add("Box", "Box");
            tableMapping.ColumnMappings.Add("BoxPrice", "BoxPrice");
            tableMapping.ColumnMappings.Add("Pack", "Pack");
            tableMapping.ColumnMappings.Add("PackPrice", "PackPrice");
            tableMapping.ColumnMappings.Add("Number", "Number");
            tableMapping.ColumnMappings.Add("TotalNumber", "TotalNumber");
            tableMapping.ColumnMappings.Add("SinglePrice", "SinglePrice");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("DiscountPercent", "DiscountPercent");
            tableMapping.ColumnMappings.Add("DiscountPrice", "DiscountPrice");
            tableMapping.ColumnMappings.Add("TaxPrice", "TaxPrice");
            tableMapping.ColumnMappings.Add("TotalWeight", "TotalWeight");
            tableMapping.ColumnMappings.Add("TaxPercent", "TaxPercent");
            tableMapping.ColumnMappings.Add("NetPrice", "NetPrice");
            tableMapping.ColumnMappings.Add("Ezafat", "Ezafat");
            tableMapping.ColumnMappings.Add("Kosoorat", "Kosoorat");
            tableMapping.ColumnMappings.Add("Column02", "Column02");
            tableMapping.ColumnMappings.Add("NetTotal", "NetTotal");
            tableMapping.ColumnMappings.Add("Cash", "Cash");
            tableMapping.ColumnMappings.Add("Cart", "Cart");
            tableMapping.ColumnMappings.Add("Etebari", "Etebari");
            tableMapping.ColumnMappings.Add("Check", "Check");
            tableMapping.ColumnMappings.Add("Bon", "Bon");
            tableMapping.ColumnMappings.Add("VolumeGroup", "VolumeGroup");
            tableMapping.ColumnMappings.Add("SpecialGroup", "SpecialGroup");
            tableMapping.ColumnMappings.Add("SpecialCustomer", "SpecialCustomer");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("CountUnitName", "CountUnitName");
            tableMapping.ColumnMappings.Add("Groups", "Groups");
            tableMapping.ColumnMappings.Add("charPrice", "charPrice");
            tableMapping.ColumnMappings.Add("SettleInfo", "SettleInfo");
            tableMapping.ColumnMappings.Add("FactorType", "FactorType");
            tableMapping.ColumnMappings.Add("NumberInBox", "NumberInBox");
            tableMapping.ColumnMappings.Add("RowDes", "RowDes");
            tableMapping.ColumnMappings.Add("Zarib", "Zarib");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("NumberInPack", "NumberInPack");
            tableMapping.ColumnMappings.Add("CityName", "CityName");
            tableMapping.ColumnMappings.Add("ProvinceName", "ProvinceName");
            tableMapping.ColumnMappings.Add("PayCash", "PayCash");
            tableMapping.ColumnMappings.Add("DraftNumber", "DraftNumber");
            tableMapping.ColumnMappings.Add("DocId", "DocId");
            tableMapping.ColumnMappings.Add("Project", "Project");
            tableMapping.ColumnMappings.Add("BuyerName", "BuyerName");
            tableMapping.ColumnMappings.Add("SaleType", "SaleType");
            tableMapping.ColumnMappings.Add("DocNum", "DocNum");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::PSHOP.Properties.Settings.Default.SALE;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        FactorTable.FactorID AS ID, FactorTable.DetailID, FactorTable.Seria" +
                "l, FactorTable.LegalNumber, FactorTable.Date, FactorTable.Responsible, FactorTab" +
                "le.CustomerID, \r\n                         FactorTable.P2Name, FactorTable.P2Nati" +
                "onalCode, FactorTable.P2ECode, FactorTable.Description2, FactorTable.P2SabtCode," +
                " FactorTable.P2Address, \r\n                         FactorTable.P2Tel, FactorTabl" +
                "e.P2Fax, FactorTable.P2PostalCode, FactorTable.P2Code, FactorTable.GoodCode, Fac" +
                "torTable.GoodName, FactorTable.Box, \r\n                         FactorTable.BoxPr" +
                "ice, FactorTable.Pack, FactorTable.PackPrice, FactorTable.Number, FactorTable.To" +
                "talNumber, FactorTable.SinglePrice, FactorTable.TotalPrice, \r\n                  " +
                "       FactorTable.DiscountPercent, FactorTable.DiscountPrice, FactorTable.TaxPr" +
                "ice, FactorTable.TotalWeight, FactorTable.TaxPercent, FactorTable.NetPrice, \r\n  " +
                "                       ISNULL(FactorTable.Ezafat, 0) AS Ezafat, ISNULL(FactorTab" +
                "le.Kosoorat, 0) AS Kosoorat, PersonInfoTable.Column02, FactorTable.NetTotal, Fac" +
                "torTable.Cash, \r\n                         FactorTable.Cart, FactorTable.Etebari," +
                " FactorTable.[Check], FactorTable.Bon, FactorTable.VolumeGroup, FactorTable.Spec" +
                "ialGroup, FactorTable.SpecialCustomer, \r\n                         FactorTable.De" +
                "scription, FactorTable.CountUnitName, derivedtbl_1.Groups, \'-\' AS charPrice, \'Se" +
                "ttleInfo\' AS SettleInfo, FactorTable.FactorType, \r\n                         Fact" +
                "orTable.NumberInBox, FactorTable.RowDes, FactorTable.Zarib, FactorTable.NumberIn" +
                "Box AS Expr1, FactorTable.NumberInPack, \r\n                         CityTable.Col" +
                "umn02 AS CityName, ProvinceTable.Column01 AS ProvinceName, FactorTable.PayCash, " +
                "FactorTable.DraftNumber, FactorTable.DocId, \r\n                         FactorTab" +
                "le.Project, FactorTable.BuyerName, FactorTable.SaleType, FactorTable.DocNum\r\nFRO" +
                "M            (SELECT        Column00, Column01, Column02, Column03, Column04, Co" +
                "lumn05, Column06\r\n                          FROM            PBASE_5.dbo.Table_06" +
                "0_ProvinceInfo) AS ProvinceTable INNER JOIN\r\n                             (SELEC" +
                "T        Column00, Column01, Column02, Column03, Column04, Column05, Column06, C" +
                "olumn07, Column08\r\n                               FROM            PBASE_5.dbo.Ta" +
                "ble_065_CityInfo) AS CityTable ON ProvinceTable.Column00 = CityTable.Column00 RI" +
                "GHT OUTER JOIN\r\n                             (SELECT        Table_010_SaleFactor" +
                ".columnid AS FactorID, Table_010_SaleFactor.column01 AS Serial, Table_010_SaleFa" +
                "ctor.Column37 AS LegalNumber, \r\n                                                " +
                "         Table_010_SaleFactor.column02 AS Date, ISNULL(Table_010_SaleFactor.Colu" +
                "mn65, \'\') AS BuyerName, ISNULL\r\n                                                " +
                "             ((SELECT        column02\r\n                                         " +
                "                        FROM            PBASE_5.dbo.Table_002_SalesTypes\r\n      " +
                "                                                           WHERE        (columni" +
                "d = Table_010_SaleFactor.Column36)), \'\') AS SaleType, Table_010_SaleFactor.colum" +
                "n03 AS CustomerID, \r\n                                                         Pe" +
                "rsonTable.Column02 AS P2Name, PersonTable.Column09 AS P2NationalCode, PersonTabl" +
                "e.Column141 AS P2ECode, \r\n                                                      " +
                "   PersonTable.Column142 AS P2SabtCode, PersonTable.Column01 AS P2Code, PersonTa" +
                "ble.Column06 AS P2Address, PersonTable.Column07 AS P2Tel,\r\n                     " +
                "                                     PersonTable.Column08 AS P2Fax, PersonTable." +
                "Column13 AS P2PostalCode, GoodTable.column01 AS GoodCode, \r\n                    " +
                "                                     Table_011_Child1_SaleFactor.column04 AS Box" +
                ", Table_011_Child1_SaleFactor.column08 AS BoxPrice, \r\n                          " +
                "                               Table_011_Child1_SaleFactor.column05 AS Pack, Tab" +
                "le_011_Child1_SaleFactor.column09 AS PackPrice, \r\n                              " +
                "                           Table_011_Child1_SaleFactor.column06 AS Number, Table" +
                "_011_Child1_SaleFactor.column07 AS TotalNumber, \r\n                              " +
                "                           Table_011_Child1_SaleFactor.column10 AS SinglePrice, " +
                "Table_011_Child1_SaleFactor.column11 AS TotalPrice, \r\n                          " +
                "                               Table_011_Child1_SaleFactor.column23 AS Descripti" +
                "on2, Table_011_Child1_SaleFactor.column16 AS DiscountPercent, \r\n                " +
                "                                         Table_011_Child1_SaleFactor.column17 AS" +
                " DiscountPrice, Table_011_Child1_SaleFactor.column18 AS TaxPercent, \r\n          " +
                "                                               Table_011_Child1_SaleFactor.colum" +
                "n19 AS TaxPrice, Table_011_Child1_SaleFactor.Column37 AS TotalWeight, \r\n        " +
                "                                                 Table_011_Child1_SaleFactor.col" +
                "umn20 AS NetPrice, GoodTable.column02 AS GoodName, OtherPrice.PlusPrice AS Ezafa" +
                "t, \r\n                                                         OtherPrice.MinusPr" +
                "ice AS Kosoorat, Table_010_SaleFactor.column05 AS Responsible, Table_010_SaleFac" +
                "tor.Column28 AS NetTotal, \r\n                                                    " +
                "     Table_010_SaleFactor.Column46 AS Cash, Table_010_SaleFactor.Column47 AS Car" +
                "t, Table_010_SaleFactor.Column48 AS Etebari, \r\n                                 " +
                "                        Table_010_SaleFactor.Column52 AS [Check], Table_010_Sale" +
                "Factor.Column54 AS Bon, Table_010_SaleFactor.Column29 AS VolumeGroup, \r\n        " +
                "                                                 Table_010_SaleFactor.Column30 A" +
                "S SpecialGroup, Table_010_SaleFactor.Column31 AS SpecialCustomer, \r\n            " +
                "                                             Table_010_SaleFactor.column06 AS De" +
                "scription, CountUnitTable.Column01 AS CountUnitName, \r\n                         " +
                "                                CASE WHEN Table_010_SaleFactor.Column12 = 0 THEN" +
                " \'***فاکتور ریالی***\' ELSE \'***فاکتور ارزی***\' END AS FactorType, \r\n            " +
                "                                             Table_011_Child1_SaleFactor.column2" +
                "3 AS RowDes, Table_011_Child1_SaleFactor.Column31 AS NumberInBox, \r\n            " +
                "                                             Table_011_Child1_SaleFactor.Column3" +
                "2 AS NumberInPack, Table_011_Child1_SaleFactor.Column33 AS Zarib, PersonTable.Co" +
                "lumn21 AS ProvinceId, \r\n                                                        " +
                " PersonTable.Column22 AS CityId, Table_010_SaleFactor.column21 AS PayCash,\r\n    " +
                "                                                         (SELECT        column01" +
                "\r\n                                                               FROM           " +
                " PWHRS_5_1399.dbo.Table_007_PwhrsDraft\r\n                                        " +
                "                       WHERE        (columnid = Table_010_SaleFactor.column09)) " +
                "AS DraftNumber, Table_010_SaleFactor.column10 AS DocId,\r\n                       " +
                "                                      (SELECT        ISNULL(Column00, 0) AS Expr" +
                "1\r\n                                                               FROM          " +
                "  PACNT_5_1399.dbo.Table_060_SanadHead\r\n                                        " +
                "                       WHERE        (ColumnId = Table_010_SaleFactor.column10)) " +
                "AS DocNum, Project.Column02 AS Project, \r\n                                      " +
                "                   Table_011_Child1_SaleFactor.columnid AS DetailID\r\n           " +
                "                    FROM            Table_010_SaleFactor INNER JOIN\r\n           " +
                "                                              Table_011_Child1_SaleFactor ON Tab" +
                "le_010_SaleFactor.columnid = Table_011_Child1_SaleFactor.column01 INNER JOIN\r\n  " +
                "                                                           (SELECT        Column" +
                "Id, Column00, Column01, Column02, Column03, Column04, Column05, Column06, Column" +
                "07, Column08, Column09, Column10, \r\n                                            " +
                "                                             Column11, Column12, Column13, Colum" +
                "n21, Column22, Column141, Column142\r\n                                           " +
                "                    FROM            PBASE_5.dbo.Table_045_PersonInfo) AS PersonT" +
                "able ON Table_010_SaleFactor.column03 = PersonTable.ColumnId LEFT OUTER JOIN\r\n  " +
                "                                                           (SELECT        column" +
                "id, SUM(PlusPrice) AS PlusPrice, SUM(MinusPrice) AS MinusPrice\r\n                " +
                "                                               FROM            (SELECT        Ta" +
                "ble_010_SaleFactor_2.columnid, SUM(Table_012_Child2_SaleFactor.column04) AS Plus" +
                "Price, 0 AS MinusPrice\r\n                                                        " +
                "                                 FROM            Table_012_Child2_SaleFactor INN" +
                "ER JOIN\r\n                                                                       " +
                "                                            Table_010_SaleFactor AS Table_010_Sa" +
                "leFactor_2 ON \r\n                                                                " +
                "                                                   Table_012_Child2_SaleFactor.c" +
                "olumn01 = Table_010_SaleFactor_2.columnid\r\n                                     " +
                "                                                    WHERE        (Table_012_Chil" +
                "d2_SaleFactor.column05 = 0)\r\n                                                   " +
                "                                      GROUP BY Table_010_SaleFactor_2.columnid, " +
                "Table_012_Child2_SaleFactor.column05\r\n                                          " +
                "                                               UNION ALL\r\n                      " +
                "                                                                   SELECT       " +
                " Table_010_SaleFactor_1.columnid, 0 AS PlusPrice, SUM(Table_012_Child2_SaleFacto" +
                "r_1.column04) AS MinusPrice\r\n                                                   " +
                "                                      FROM            Table_012_Child2_SaleFacto" +
                "r AS Table_012_Child2_SaleFactor_1 INNER JOIN\r\n                                 " +
                "                                                                                " +
                " Table_010_SaleFactor AS Table_010_SaleFactor_1 ON \r\n                           " +
                "                                                                                " +
                "       Table_012_Child2_SaleFactor_1.column01 = Table_010_SaleFactor_1.columnid\r" +
                "\n                                                                               " +
                "          WHERE        (Table_012_Child2_SaleFactor_1.column05 = 1)\r\n           " +
                "                                                                              GR" +
                "OUP BY Table_010_SaleFactor_1.columnid, Table_012_Child2_SaleFactor_1.column05) " +
                "AS OtherPrice_1\r\n                                                               " +
                "GROUP BY columnid) AS OtherPrice ON Table_010_SaleFactor.columnid = OtherPrice.c" +
                "olumnid LEFT OUTER JOIN\r\n                                                       " +
                "      (SELECT        columnid, column01, column02, column03, column04, column05," +
                " column06, column07, column08, column09, column10, column11, \r\n                 " +
                "                                                                        column12" +
                ", column13, column14, column15, column16, column17, column18, column19, column20" +
                ", column21, column22, column23, \r\n                                              " +
                "                                           column24, column25, column26, column2" +
                "7, column28, column29, column30, column31\r\n                                     " +
                "                          FROM            PWHRS_5_1399.dbo.table_004_CommodityAn" +
                "dIngredients) AS GoodTable ON \r\n                                                " +
                "         Table_011_Child1_SaleFactor.column02 = GoodTable.columnid LEFT OUTER JO" +
                "IN\r\n                                                             (SELECT        " +
                "Column00, Column01\r\n                                                            " +
                "   FROM            PBASE_5.dbo.Table_070_CountUnitInfo) AS CountUnitTable ON \r\n " +
                "                                                        Table_011_Child1_SaleFac" +
                "tor.column03 = CountUnitTable.Column00 LEFT OUTER JOIN\r\n                        " +
                "                                     (SELECT        Column00, Column02\r\n        " +
                "                                                       FROM            PBASE_5.d" +
                "bo.Table_035_ProjectInfo) AS Project ON Table_011_Child1_SaleFactor.column22 = P" +
                "roject.Column00) AS FactorTable ON \r\n                         CityTable.Column01" +
                " = FactorTable.CityId LEFT OUTER JOIN\r\n                             (SELECT     " +
                "   PersonId, Groups\r\n                               FROM            PBASE_5.dbo." +
                "FN_01_PersonGroup() AS FN_01_PersonGroup_1) AS derivedtbl_1 ON \r\n               " +
                "          FactorTable.CustomerID = derivedtbl_1.PersonId LEFT OUTER JOIN\r\n      " +
                "                       (SELECT        ColumnId, Column01, Column02, Column21, Co" +
                "lumn22\r\n                               FROM            PBASE_5.dbo.Table_045_Per" +
                "sonInfo AS Table_045_PersonInfo_1) AS PersonInfoTable ON \r\n                     " +
                "    FactorTable.Responsible = PersonInfoTable.ColumnId\r\nWHERE        (FactorTabl" +
                "e.Serial = 3050)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.Rpt_SaleTableDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.Rpt_SaleTableDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.Rpt_SaleTableDataTable dataTable = new DataSet1.Rpt_SaleTableDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591